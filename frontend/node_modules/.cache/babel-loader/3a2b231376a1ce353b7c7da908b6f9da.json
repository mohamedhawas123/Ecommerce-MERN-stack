{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nconst authStart = () => {\n  return {\n    type: actionTypes.USER_LOGIN_START\n  };\n};\n\nconst authSucess = token => {\n  return {\n    type: actionTypes.USER_LOGIN_SUCESS,\n    token: token\n  };\n};\n\nconst authFail = error => {\n  return {\n    type: actionTypes.USER_LOGIN_FAIL,\n    error: error\n  };\n};\n\nconst profilestart = () => {\n  return {\n    type: actionTypes.USER_PROFILE_START\n  };\n};\n\nconst profileSucess = payload => {\n  return {\n    type: actionTypes.USER_PROFILE_SUCESS,\n    payload: payload\n  };\n};\n\nexport const authLogin = (email, password) => {\n  return dispatch => {\n    dispatch(authStart);\n    axios.post(`/api/users/login`, {\n      email: email,\n      password: password\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      const token = res.data.token;\n      localStorage.setItem(\"userInfo\", JSON.stringify(res.data));\n      dispatch(authSucess(res.data));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const UserDetail = id => async getState => {\n  return dispatch => {\n    console.log(\"hello\");\n  };\n};\nexport const authSignup = (name, email, password) => {\n  return dispatch => {\n    dispatch(authStart);\n    axios.post(`/api/users`, {\n      name: name,\n      email: email,\n      password: password\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      const token = res.data.token;\n      localStorage.setItem(\"userInfo\", JSON.stringify(res.data));\n      dispatch(authSucess(token));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: actionTypes.USER_LOGOUT\n  });\n};","map":{"version":3,"sources":["/home/metro/Desktop/projects/ecom-mern/frontend/src/store/actions/user.js"],"names":["actionTypes","axios","authStart","type","USER_LOGIN_START","authSucess","token","USER_LOGIN_SUCESS","authFail","error","USER_LOGIN_FAIL","profilestart","USER_PROFILE_START","profileSucess","payload","USER_PROFILE_SUCESS","authLogin","email","password","dispatch","post","headers","then","res","data","localStorage","setItem","JSON","stringify","catch","err","UserDetail","id","getState","console","log","authSignup","name","logout","removeItem","USER_LOGOUT"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes'\nimport axios from 'axios'\n\n\nconst authStart = () => {\n    return {\n        type: actionTypes.USER_LOGIN_START\n    }\n}\n\nconst authSucess = (token) => {\n    return {\n        type: actionTypes.USER_LOGIN_SUCESS,\n        token: token\n    }\n}\n\n\nconst authFail = (error) => {\n    return {\n        type: actionTypes.USER_LOGIN_FAIL,\n        error: error\n    }\n}\n\nconst profilestart = () => {\n    return {\n        type: actionTypes.USER_PROFILE_START\n    }\n    \n}\n\nconst profileSucess = (payload) => {\n\n    return {\n        type : actionTypes.USER_PROFILE_SUCESS,\n        payload: payload\n    }\n    \n\n}\n\n\n\n\n\nexport const authLogin = (email, password) => {\n    return dispatch => {\n        dispatch(authStart)\n        axios.post(`/api/users/login`, {\n            email: email,\n            password: password\n        },{\n            headers:{'Content-Type': 'application/json'}\n        })\n        .then(res => {\n            const token = res.data.token\n            localStorage.setItem(\"userInfo\", JSON.stringify(res.data))\n            dispatch(authSucess(res.data))\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\n\nexport const UserDetail = (id) =>  async (getState) => {\n    \n    return dispatch => {\n        console.log(\"hello\")\n    }\n    \n\n}\n\n\n\nexport const authSignup = (name, email, password) => {\n    return dispatch => {\n        dispatch(authStart)\n        axios.post(`/api/users`, {\n            name: name,\n            email: email,\n            password: password\n        },{\n            headers:{'Content-Type': 'application/json'}\n        })\n        .then(res => {\n            const token = res.data.token\n            localStorage.setItem(\"userInfo\", JSON.stringify(res.data))\n            dispatch(authSucess(token))\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const  logout = () => (dispatch) => {\n\n    localStorage.removeItem(\"userInfo\")\n\n    dispatch ({\n        type: actionTypes.USER_LOGOUT\n    })\n}"]},"metadata":{},"sourceType":"module"}