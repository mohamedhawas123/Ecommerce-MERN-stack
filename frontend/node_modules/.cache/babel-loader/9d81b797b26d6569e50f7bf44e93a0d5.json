{"ast":null,"code":"var _jsxFileName = \"/home/metro/Desktop/projects/ecom-mern/frontend/src/screens/productEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { productDetail, updateProduct } from '../store/actions/productlist';\nimport FormContainer from '../components/formcontainer';\nimport { PRODUCT_UPDATE_REST } from '../store/actions/actionTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductEditScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [brand, setBrand] = useState('');\n  const [image, setImage] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStack] = useState(0);\n  const [description, setDescriptopn] = useState('');\n  const dispatch = useDispatch();\n  const userDetaill = useSelector(state => state.Product);\n  const {\n    loading,\n    product,\n    error\n  } = userDetaill;\n  const userDetaille = useSelector(state => state.Product);\n  const {\n    loading: loadingUpdate,\n    success,\n    error: errorUpdate\n  } = userDetaille;\n  useEffect(() => {\n    if (success) {\n      dispatch({\n        type: PRODUCT_UPDATE_REST\n      });\n      history.push('/admin/productlist');\n    } else {\n      if (!product.name || product._id == productId) {\n        dispatch(productDetail(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setBrand(product.brand);\n        setImage(product.image);\n        setCategory(product.category);\n        setCountInStack(product.countInStock);\n        setDescriptopn(product.description);\n      }\n    }\n  }, [dispatch, product, history, productId, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      descriptopn,\n      countInStock\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 27\n    }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: errorUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 20\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"name\",\n          placeholder: \"Enter name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"price\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Price \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Enter price\",\n          value: price,\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"image\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Image  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Image Url\",\n          value: image,\n          onChange: e => setImage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"brand\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Brand  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter brand \",\n          value: brand,\n          onChange: e => setBrand(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"countInStack\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"countInStack  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"countInStock \",\n          value: countInStock,\n          onChange: e => setCountInStack(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"price\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Price  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"price \",\n          value: price,\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"category\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Category  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"category \",\n          value: category,\n          onChange: e => setCategory(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"descriptopn\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Descriptopn  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"descriptopn \",\n          value: description,\n          onChange: e => setDescriptopn(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductEditScreen, \"3zkiRrp8Ukb7nxRIEo/y4Txl0qM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProductEditScreen;\nexport default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["/home/metro/Desktop/projects/ecom-mern/frontend/src/screens/productEditScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Loader","Message","productDetail","updateProduct","FormContainer","PRODUCT_UPDATE_REST","ProductEditScreen","match","history","productId","params","id","name","setName","price","setPrice","brand","setBrand","image","setImage","category","setCategory","countInStock","setCountInStack","description","setDescriptopn","dispatch","userDetaill","state","Product","loading","product","error","userDetaille","loadingUpdate","success","errorUpdate","type","push","_id","submitHandler","e","preventDefault","descriptopn","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,iBAA3B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,8BAA3C;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAAQC,mBAAR,QAAkC,8BAAlC;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAsB;AAAA;;AAE5C,QAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaC,EAA/B;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACyB,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC2B,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC6B,YAAD,EAAeC,eAAf,IAAkC9B,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAAC+B,WAAD,EAAcC,cAAd,IAAgChC,QAAQ,CAAC,EAAD,CAA9C;AAMA,QAAMiC,QAAQ,GAAG5B,WAAW,EAA5B;AAEA,QAAM6B,WAAW,GAAG5B,WAAW,CAAC6B,KAAK,IAAIA,KAAK,CAACC,OAAhB,CAA/B;AACA,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,MAA4BL,WAAlC;AAGA,QAAMM,YAAY,GAAGlC,WAAW,CAAC6B,KAAK,IAAIA,KAAK,CAACC,OAAhB,CAAhC;AACA,QAAM;AAACC,IAAAA,OAAO,EAACI,aAAT;AAAwBC,IAAAA,OAAxB;AAAiCH,IAAAA,KAAK,EAACI;AAAvC,MAAsDH,YAA5D;AAKAvC,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAGyC,OAAH,EAAY;AACRT,MAAAA,QAAQ,CAAC;AAACW,QAAAA,IAAI,EAAChC;AAAN,OAAD,CAAR;AACAG,MAAAA,OAAO,CAAC8B,IAAR,CAAa,oBAAb;AACH,KAHD,MAGM;AACF,UAAG,CAACP,OAAO,CAACnB,IAAT,IAAiBmB,OAAO,CAACQ,GAAR,IAAa9B,SAAjC,EAA4C;AACxCiB,QAAAA,QAAQ,CAACxB,aAAa,CAACO,SAAD,CAAd,CAAR;AAEH,OAHD,MAGM;AACLI,QAAAA,OAAO,CAACkB,OAAO,CAACnB,IAAT,CAAP;AACAG,QAAAA,QAAQ,CAACgB,OAAO,CAACjB,KAAT,CAAR;AACAG,QAAAA,QAAQ,CAACc,OAAO,CAACf,KAAT,CAAR;AACAG,QAAAA,QAAQ,CAACY,OAAO,CAACb,KAAT,CAAR;AACAG,QAAAA,WAAW,CAACU,OAAO,CAACX,QAAT,CAAX;AACAG,QAAAA,eAAe,CAACQ,OAAO,CAACT,YAAT,CAAf;AACAG,QAAAA,cAAc,CAACM,OAAO,CAACP,WAAT,CAAd;AAEA;AACJ;AAMJ,GAzBQ,EAyBN,CAACE,QAAD,EAAWK,OAAX,EAAoBvB,OAApB,EAA6BC,SAA7B,EAAwC0B,OAAxC,CAzBM,CAAT;;AA2BA,QAAMK,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAhB,IAAAA,QAAQ,CAACvB,aAAa,CAAC;AACnBoC,MAAAA,GAAG,EAAC9B,SADe;AAEnBG,MAAAA,IAFmB;AAGnBE,MAAAA,KAHmB;AAInBI,MAAAA,KAJmB;AAKnBF,MAAAA,KALmB;AAMnBI,MAAAA,QANmB;AAOnBuB,MAAAA,WAPmB;AAQnBrB,MAAAA;AARmB,KAAD,CAAd,CAAR;AAYH,GAdD;;AAiBA,sBAEI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,oBAAT;AAA+B,MAAA,SAAS,EAAC,oBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,EAKCY,aAAa,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YALlB,EAMCE,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YANhB,EAOCN,OAAO,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAeE,KAAK,gBAAG,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAH,gBAExB,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEQ,aAAhB;AAAA,8BAEA,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACQ,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,eAEQ,QAAC,IAAD,CAAM,OAAN;AACC,UAAA,IAAI,EAAC,MADN;AAEE,UAAA,WAAW,EAAC,YAFd;AAGE,UAAA,KAAK,EAAE5B,IAHT;AAIA,UAAA,QAAQ,EAAG6B,CAAD,IAAM5B,OAAO,CAAC4B,CAAC,CAACG,MAAF,CAASC,KAAV;AAJvB;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAcI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,OAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACC,UAAA,IAAI,EAAC,QADN;AAEE,UAAA,WAAW,EAAC,aAFd;AAGE,UAAA,KAAK,EAAE/B,KAHT;AAIA,UAAA,QAAQ,EAAG2B,CAAD,IAAM1B,QAAQ,CAAC0B,CAAC,CAACG,MAAF,CAASC,KAAV;AAJxB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,eAyBI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,OAAtB;AAAA,gCAEA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGI,QAAC,IAAD,CAAM,OAAN;AACC,UAAA,IAAI,EAAC,MADN;AAEE,UAAA,WAAW,EAAC,iBAFd;AAGE,UAAA,KAAK,EAAE3B,KAHT;AAIA,UAAA,QAAQ,EAAGuB,CAAD,IAAMtB,QAAQ,CAACsB,CAAC,CAACG,MAAF,CAASC,KAAV;AAJxB;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ,eAsCI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,OAAtB;AAAA,gCAEA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGI,QAAC,IAAD,CAAM,OAAN;AACC,UAAA,IAAI,EAAC,MADN;AAEE,UAAA,WAAW,EAAC,cAFd;AAGE,UAAA,KAAK,EAAE7B,KAHT;AAIA,UAAA,QAAQ,EAAGyB,CAAD,IAAMxB,QAAQ,CAACwB,CAAC,CAACG,MAAF,CAASC,KAAV;AAJxB;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAtCJ,eAmDI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,cAAtB;AAAA,gCAEA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGI,QAAC,IAAD,CAAM,OAAN;AACC,UAAA,IAAI,EAAC,MADN;AAEE,UAAA,WAAW,EAAC,eAFd;AAGE,UAAA,KAAK,EAAEvB,YAHT;AAIA,UAAA,QAAQ,EAAGmB,CAAD,IAAMlB,eAAe,CAACkB,CAAC,CAACG,MAAF,CAASC,KAAV;AAJ/B;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnDJ,eAgEI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,OAAtB;AAAA,gCAEA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGI,QAAC,IAAD,CAAM,OAAN;AACC,UAAA,IAAI,EAAC,MADN;AAEE,UAAA,WAAW,EAAC,QAFd;AAGE,UAAA,KAAK,EAAE/B,KAHT;AAIA,UAAA,QAAQ,EAAG2B,CAAD,IAAM1B,QAAQ,CAAC0B,CAAC,CAACG,MAAF,CAASC,KAAV;AAJxB;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhEJ,eA4EI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,UAAtB;AAAA,gCAEA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGI,QAAC,IAAD,CAAM,OAAN;AACC,UAAA,IAAI,EAAC,MADN;AAEE,UAAA,WAAW,EAAC,WAFd;AAGE,UAAA,KAAK,EAAEzB,QAHT;AAIA,UAAA,QAAQ,EAAGqB,CAAD,IAAMpB,WAAW,CAACoB,CAAC,CAACG,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA5EJ,eAyFI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,aAAtB;AAAA,gCAEA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGI,QAAC,IAAD,CAAM,OAAN;AACC,UAAA,IAAI,EAAC,MADN;AAEE,UAAA,WAAW,EAAC,cAFd;AAGE,UAAA,KAAK,EAAErB,WAHT;AAIA,UAAA,QAAQ,EAAGiB,CAAD,IAAMhB,cAAc,CAACgB,CAAC,CAACG,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAzFJ,eAqGI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArGJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAyHD,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAzHC;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAkIH,CA1MD;;GAAMvC,iB;UAgBeR,W,EAEGC,W,EAICA,W;;;KAtBnBO,iB;AA4MN,eAAeA,iBAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Form, Button} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport {productDetail, updateProduct} from '../store/actions/productlist'\nimport FormContainer from '../components/formcontainer'\nimport {PRODUCT_UPDATE_REST} from '../store/actions/actionTypes'\n\nconst ProductEditScreen = ({match, history}) => {\n\n    const productId = match.params.id\n\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [brand, setBrand] = useState('')\n    const [image, setImage] = useState('')\n    const [category, setCategory] = useState('')\n    const [countInStock, setCountInStack] = useState(0)\n    const [description, setDescriptopn] = useState('')\n\n\n\n\n\n    const dispatch = useDispatch()\n\n    const userDetaill = useSelector(state => state.Product)\n    const {loading, product, error} = userDetaill\n    \n\n    const userDetaille = useSelector(state => state.Product)\n    const {loading:loadingUpdate, success, error:errorUpdate} = userDetaille\n\n\n    \n\n    useEffect(() => {\n\n        if(success) {\n            dispatch({type:PRODUCT_UPDATE_REST})\n            history.push('/admin/productlist')\n        }else {\n            if(!product.name || product._id==productId) {\n                dispatch(productDetail(productId))\n     \n            }else {\n             setName(product.name)\n             setPrice(product.price)\n             setBrand(product.brand)\n             setImage(product.image)\n             setCategory(product.category)\n             setCountInStack(product.countInStock)\n             setDescriptopn(product.description)\n     \n            }\n        }\n\n      \n       \n        \n\n    }, [dispatch, product ,history ,productId ,success ])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProduct({\n            _id:productId,\n            name,\n            price,\n            image,\n            brand,\n            category,\n            descriptopn,\n            countInStock\n        }))\n\n \n    }\n\n\n    return (\n\n        <React.Fragment>\n            <Link to='/admin/productlist'  className=\"btn btn-light my-3\">Go Back</Link>\n        \n        \n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? <Loader />: error ? <Message variant=\"danger\">{error}</Message>:\n        (\n            <Form onSubmit={submitHandler}>\n\n            <Form.Group controlId=\"name\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                     type=\"name\"\n                      placeholder=\"Enter name\"\n                      value={name}\n                    onChange={(e)=> setName(e.target.value) }>\n    \n                    </Form.Control>\n                </Form.Group>\n    \n    \n                <Form.Group controlId=\"price\">\n                    <Form.Label>Price </Form.Label>\n                    <Form.Control\n                     type=\"number\"\n                      placeholder=\"Enter price\"\n                      value={price}\n                    onChange={(e)=> setPrice(e.target.value) }>\n    \n                    </Form.Control>\n                </Form.Group>\n    \n                <Form.Group controlId=\"image\">\n                \n                <Form.Label>Image  </Form.Label>\n                    <Form.Control\n                     type=\"text\"\n                      placeholder=\"Enter Image Url\"\n                      value={image}\n                    onChange={(e)=> setImage(e.target.value) }>\n    \n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId=\"brand\">\n                \n                <Form.Label>Brand  </Form.Label>\n                    <Form.Control\n                     type=\"text\"\n                      placeholder=\"Enter brand \"\n                      value={brand}\n                    onChange={(e)=> setBrand(e.target.value) }>\n    \n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId=\"countInStack\">\n                \n                <Form.Label>countInStack  </Form.Label>\n                    <Form.Control\n                     type=\"text\"\n                      placeholder=\"countInStock \"\n                      value={countInStock}\n                    onChange={(e)=> setCountInStack(e.target.value) }>\n    \n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId=\"price\">\n                \n                <Form.Label>Price  </Form.Label>\n                    <Form.Control\n                     type=\"text\"\n                      placeholder=\"price \"\n                      value={price}\n                    onChange={(e)=> setPrice(e.target.value) }>\n    \n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"category\">\n                \n                <Form.Label>Category  </Form.Label>\n                    <Form.Control\n                     type=\"text\"\n                      placeholder=\"category \"\n                      value={category}\n                    onChange={(e)=> setCategory(e.target.value) }>\n    \n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId=\"descriptopn\">\n                \n                <Form.Label>Descriptopn  </Form.Label>\n                    <Form.Control\n                     type=\"text\"\n                      placeholder=\"descriptopn \"\n                      value={description}\n                    onChange={(e)=> setDescriptopn(e.target.value) }>\n    \n                    </Form.Control>\n                </Form.Group>\n                \n                <Button type=\"submit\" variant=\"primary\">\n                    Update\n                </Button>\n    \n    \n            </Form>\n    \n        )\n        }\n       \n\n       <FormContainer/>\n        </React.Fragment>\n       \n       \n            \n\n    )\n}\n\nexport default ProductEditScreen"]},"metadata":{},"sourceType":"module"}