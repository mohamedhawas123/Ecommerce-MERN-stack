{"ast":null,"code":"import React, { getState } from 'react';\nimport * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`/api/products/${id}`);\n  dispatch({\n    type: actionTypes.CART_ADD_ITEM,\n    item: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: actionTypes.CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.removeItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n}; // const adCart = (item ) => {\n//     return {\n//         type: actionTypes.CART_ADD_ITEM,\n//         item: item,\n//     }\n// }\n// return dispatch => {    \n//     axios.get(`/api/products/${id}`)\n//     .then(res => {\n//         dispatch(adCart(res.data))\n//     })\n// }","map":{"version":3,"sources":["/home/metro/Desktop/projects/ecom-mern/frontend/src/store/actions/cart.js"],"names":["React","getState","actionTypes","axios","addToCart","id","qty","dispatch","data","get","type","CART_ADD_ITEM","item","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","CART_REMOVE_ITEM","payload","removeItem"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAMA,OAAO,MAAMC,SAAS,GAAI,CAACC,EAAD,EAAKC,GAAL,KAAa,OAAOC,QAAP,EAAiBN,QAAjB,KAA+B;AAElE,QAAM;AAACO,IAAAA;AAAD,MAAS,MAAML,KAAK,CAACM,GAAN,CAAW,iBAAgBJ,EAAG,EAA9B,CAArB;AAEAE,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAACR,WAAW,CAACS,aADZ;AAELC,IAAAA,IAAI,EAAE;AACFC,MAAAA,OAAO,EAACL,IAAI,CAACM,GADX;AAEFC,MAAAA,IAAI,EAAGP,IAAI,CAACO,IAFV;AAGFC,MAAAA,KAAK,EAAER,IAAI,CAACQ,KAHV;AAIFC,MAAAA,KAAK,EAAET,IAAI,CAACS,KAJV;AAKFC,MAAAA,YAAY,EAAEV,IAAI,CAACU,YALjB;AAMFZ,MAAAA;AANE;AAFD,GAAD,CAAR;AAYAa,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAerB,QAAQ,GAAGsB,IAAX,CAAgBC,SAA/B,CAAlC;AAEH,CAlBM;AAqBP,OAAO,MAAMC,cAAc,GAAIpB,EAAD,IAAQ,CAACE,QAAD,EAAWN,QAAX,KAAwB;AAE1DM,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAER,WAAW,CAACwB,gBADb;AAELC,IAAAA,OAAO,EAAEtB;AAFJ,GAAD,CAAR;AAKAc,EAAAA,YAAY,CAACS,UAAb,CAAwB,WAAxB,EAAqCP,IAAI,CAACC,SAAL,CAAerB,QAAQ,GAAGsB,IAAX,CAAgBC,SAA/B,CAArC;AACH,CARM,C,CAWP;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, {getState} from 'react'\nimport * as actionTypes from './actionTypes'\nimport axios from 'axios'\n\n\n\n\n\nexport const addToCart =  (id, qty) => async (dispatch, getState) =>  {\n    \n    const {data} = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type:actionTypes.CART_ADD_ITEM,\n        item: {\n            product:data._id,\n            name : data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems))\n    \n}\n\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    \n    dispatch({\n        type: actionTypes.CART_REMOVE_ITEM,\n        payload: id\n    })\n\n    localStorage.removeItem(\"cartItems\", JSON.stringify(getState().cart.cartItems))\n}\n\n \n// const adCart = (item ) => {\n//     return {\n//         type: actionTypes.CART_ADD_ITEM,\n//         item: item,\n        \n\n//     }\n// }\n\n\n\n// return dispatch => {    \n//     axios.get(`/api/products/${id}`)\n//     .then(res => {\n//         dispatch(adCart(res.data))\n//     })\n    \n// }"]},"metadata":{},"sourceType":"module"}