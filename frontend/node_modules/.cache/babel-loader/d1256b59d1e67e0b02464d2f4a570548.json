{"ast":null,"code":"var _jsxFileName = \"/home/metro/Desktop/projects/ecom-mern/frontend/src/screens/cartScrean.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport { Link } from 'react-router-bootstrap';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\nimport { addToCart } from '../store/actions/cart';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartScrean = ({\n  match,\n  history,\n  location,\n  it\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId));\n      localStorage.setItem(\"cartItems\", JSON.stringify(it.cart.cartItems[0]));\n    }\n  }, [dispatch, productId]);\n  console.log(it);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 8\n  }, this);\n};\n\n_s(CartScrean, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CartScrean;\n\nconst mapStateToProps = state => {\n  return {\n    it: state\n  };\n};\n\nexport default connect(mapStateToProps)(CartScrean);\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScrean\");","map":{"version":3,"sources":["/home/metro/Desktop/projects/ecom-mern/frontend/src/screens/cartScrean.js"],"names":["React","useEffect","useDispatch","useSelector","Message","Link","Row","Col","ListGroup","Image","Form","Button","Card","addToCart","connect","CartScrean","match","history","location","it","productId","params","id","qty","search","Number","split","dispatch","localStorage","setItem","JSON","stringify","cart","cartItems","console","log","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAAQC,IAAR,QAAmB,wBAAnB;AACA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,SAAlB,EAA6BC,KAA7B,EAAoCC,IAApC,EAA0CC,MAA1C,EAAkDC,IAAlD,QAA6D,iBAA7D;AACA,SAAQC,SAAR,QAAwB,uBAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,QAAjB;AAA2BC,EAAAA;AAA3B,CAAD,KAAoC;AAAA;;AAGnD,QAAMC,SAAS,GAAGJ,KAAK,CAACK,MAAN,CAAaC,EAA/B;AAEA,QAAMC,GAAG,GAAGL,QAAQ,CAACM,MAAT,GAAkBC,MAAM,CAACP,QAAQ,CAACM,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAD,CAAxB,GAA0D,CAAtE;AAEA,QAAMC,QAAQ,GAAGzB,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACb,QAAGmB,SAAH,EAAc;AACVO,MAAAA,QAAQ,CAACd,SAAS,CAACO,SAAD,CAAV,CAAR;AACAQ,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAgBZ,EAAE,CAACa,IAAH,CAAQC,SAAR,CAAkB,CAAlB,CAAhB,CAAlC;AACH;AAEJ,GANQ,EAMN,CAACN,QAAD,EAAWP,SAAX,CANM,CAAT;AAQAc,EAAAA,OAAO,CAACC,GAAR,CAAYhB,EAAZ;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKF,CAxBD;;GAAMJ,U;UAOeb,W;;;KAPfa,U;;AA0BN,MAAMqB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHlB,IAAAA,EAAE,EAAEkB;AADD,GAAP;AAGH,CAJD;;AAMA,eAAevB,OAAO,CAACsB,eAAD,CAAP,CAAyBrB,UAAzB,CAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport {Link} from 'react-router-bootstrap'\nimport {Row, Col, ListGroup, Image, Form, Button, Card} from 'react-bootstrap'\nimport {addToCart} from '../store/actions/cart'\nimport {connect} from 'react-redux'\n\n\nconst CartScrean = ({match, history, location, it}) => {\n    \n\n    const productId = match.params.id\n\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    \n    const dispatch = useDispatch()\n\n    useEffect( () => {\n        if(productId) {\n            dispatch(addToCart(productId))\n            localStorage.setItem(\"cartItems\", JSON.stringify( it.cart.cartItems[0] ))\n        }\n        \n    }, [dispatch, productId,] )\n\n    console.log(it)\n\n   return (\n       <div>\n           Cart\n       </div>\n   ) \n}\n\nconst mapStateToProps = (state) => {\n    return {\n        it: state\n    }\n}\n\nexport default connect(mapStateToProps)(CartScrean)"]},"metadata":{},"sourceType":"module"}