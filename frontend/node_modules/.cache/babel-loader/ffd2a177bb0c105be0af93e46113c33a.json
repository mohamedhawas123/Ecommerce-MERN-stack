{"ast":null,"code":"import axios from 'axios';\nimport React from 'react';\nimport * as actionTypes from '../actions/actionTypes';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actionTypes.ORDER_CREATE_START\n    }); //  const {userLogin: {userInfo}} = getState()\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getState().user.userInfo.token}`\n      }\n    };\n    console.log(getState().user.userInfo.token);\n    const {\n      data\n    } = await axios.post('/api/orders', order, config);\n    dispatch({\n      type: actionTypes.ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.ORDER_CREATE_FAIL,\n      payload: error.reponse && error.reponse.data.message ? error.reponse.data.message : error.message\n    });\n  }\n};\nexport const getOrder = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actionTypes.ORDER_GET_START\n    }); //  const {userLogin: {userInfo}} = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${getState().user.userInfo.token}`\n      }\n    };\n    console.log(getState().user.userInfo.token);\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: actionTypes.ORDER_GET_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.ORDER_GET_FAIL,\n      payload: error.reponse && error.reponse.data.message ? error.reponse.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actionTypes.ORDER_PAY_START\n    }); //  const {userLogin: {userInfo}} = getState()\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getState().user.userInfo.token}`\n      }\n    };\n    console.log(getState().user.userInfo.token);\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: actionTypes.ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.ORDER_PAY_FAIL,\n      payload: error.reponse && error.reponse.data.message ? error.reponse.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actionTypes.ORDER_LIST_START\n    }); //  const {userLogin: {userInfo}} = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${getState().user.userLogin.userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: actionTypes.ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: actionTypes.ORDER_LIST_FAIL,\n      payload: error.reponse && error.reponse.data.message ? error.reponse.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/metro/Desktop/projects/ecom-mern/frontend/src/store/actions/ordercreate.js"],"names":["axios","React","actionTypes","createOrder","order","dispatch","getState","type","ORDER_CREATE_START","config","headers","Authorization","user","userInfo","token","console","log","data","post","ORDER_CREATE_SUCCESS","payload","error","ORDER_CREATE_FAIL","reponse","message","getOrder","id","ORDER_GET_START","get","ORDER_GET_SUCCESS","ORDER_GET_FAIL","payOrder","orderId","paymentResult","ORDER_PAY_START","put","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","listMyOrders","ORDER_LIST_START","userLogin","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React from 'react'\nimport * as actionTypes from '../actions/actionTypes'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: actionTypes.ORDER_CREATE_START\n        })\n    \n      //  const {userLogin: {userInfo}} = getState()\n    \n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization : `Bearer ${getState().user.userInfo.token}`\n            }\n        }\n\n        console.log(getState().user.userInfo.token)\n    \n        const {data} = await axios.post('/api/orders', order, config)\n    \n        dispatch({\n            type: actionTypes.ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n    }catch(error) {\n        dispatch({\n            type: actionTypes.ORDER_CREATE_FAIL,\n            payload: error.reponse && error.reponse.data.message ? error.reponse.data.message: error.message\n        })\n    }\n\n   \n\n}\n\n\n\nexport const getOrder = (id) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: actionTypes.ORDER_GET_START\n        })\n    \n      //  const {userLogin: {userInfo}} = getState()\n    \n        const config = {\n            headers: {\n                Authorization : `Bearer ${getState().user.userInfo.token}`\n            }\n        }\n\n        console.log(getState().user.userInfo.token)\n    \n        const {data} = await axios.get(`/api/orders/${id}`, config)\n    \n        dispatch({\n            type: actionTypes.ORDER_GET_SUCCESS,\n            payload: data\n        })\n    }catch(error) {\n        dispatch({\n            type: actionTypes.ORDER_GET_FAIL,\n            payload: error.reponse && error.reponse.data.message ? error.reponse.data.message: error.message\n        })\n    }\n\n   \n\n}\n\n\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: actionTypes.ORDER_PAY_START\n        })\n    \n      //  const {userLogin: {userInfo}} = getState()\n    \n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization : `Bearer ${getState().user.userInfo.token}`\n            }\n        }\n\n        console.log(getState().user.userInfo.token)\n    \n        const {data} = await axios.put(`/api/orders/${orderId}/pay`, paymentResult  ,config)\n    \n        dispatch({\n            type: actionTypes.ORDER_PAY_SUCCESS,\n            payload: data\n        })\n    }catch(error) {\n        dispatch({\n            type: actionTypes.ORDER_PAY_FAIL,\n            payload: error.reponse && error.reponse.data.message ? error.reponse.data.message: error.message\n        })\n    }\n\n   \n\n}\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: actionTypes.ORDER_LIST_START\n        })\n    \n      //  const {userLogin: {userInfo}} = getState()\n    \n        const config = {\n            headers: {\n                \n                Authorization : `Bearer ${getState().user.userLogin.userInfo.token}`\n            }\n        }\n\n        \n    \n        const {data} = await axios.get(`/api/orders/myorders` ,config)\n    \n        dispatch({\n            type: actionTypes.ORDER_LIST_SUCCESS,\n            payload: data\n        })\n    }catch(error) {\n        console.log(error)\n        dispatch({\n            type: actionTypes.ORDER_LIST_FAIL,\n            payload: error.reponse && error.reponse.data.message ? error.reponse.data.message: error.message\n        })\n    }\n\n   \n\n}"]},"metadata":{},"sourceType":"module"}