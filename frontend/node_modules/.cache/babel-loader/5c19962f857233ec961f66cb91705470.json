{"ast":null,"code":"var _jsxFileName = \"/home/metro/Desktop/projects/ecom-mern/frontend/src/screens/productscreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Card, Button } from 'react-bootstrap';\nimport Rating from '../components/rating';\nimport axios from 'axios';\nimport { productDetail, createproductReview } from '../store/actions/productlist';\nimport { connect } from \"react-redux\";\nimport Form from 'react-bootstrap/Form';\nimport { PRODUCT_UPDATE_REVIEW_REST } from '../store/actions/actionTypes';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductScreen = props => {\n  _s();\n\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const productReviewCreate = useSelector(state => state.Product);\n  const {\n    success: successReview,\n    loading: loadingReview,\n    error: errorReview\n  } = productReviewCreate;\n  const userLogin = useSelector(state => state.user);\n  const {\n    userInfo\n  } = userLogin;\n  const dispatch = useDispatch();\n  const {\n    product\n  } = props;\n  console.log(product); // const [product, setProduct] = useState([])\n\n  useEffect(() => {\n    if (successReview) {\n      alert(\"Review Submitted !\");\n      setRating(0);\n      setComment('');\n      dispatch({\n        type: PRODUCT_UPDATE_REVIEW_REST\n      });\n    } // const fetchdata = async () => {\n    //     const {data} = await axios.get(`/api/products/${match.params.id}`)\n    //     setProduct(data)\n    // }\n    // fetchdata()\n\n\n    props.fetchData(props.match.params.id);\n  }, [dispatch, props.match, successReview]);\n\n  const addToCartHandler = () => {\n    props.history.push(`/cart/${props.match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(createproductReview(props.match.id, {\n      rating,\n      comment\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-dark my-3\",\n      to: \"/\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), product ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: product.image,\n            alt: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Rating, {\n                value: product.rating,\n                text: `${product.numReviews} reviews `\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [\"Price: $\", product.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [\"Description: $\", product.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"$\", product.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: product.countInStock > 0 ? 'In Stock' : 'Out of Stock'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: \"Qty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  value: qty,\n                  onChange: e => {\n                    setQty(e.target.value);\n                  },\n                  children: [...Array(product.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: x + 1,\n                    children: x + 1\n                  }, x + 1, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 41\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: addToCartHandler,\n              className: \"btn-block\",\n              type: \"button\",\n              disabled: product.countInStock === 0,\n              children: \"Add To Cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this), product.review && product.review.length === 0 && /*#__PURE__*/_jsxDEV(Message, {\n            children: \"No Reviews \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 71\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [product.review && product.review.map(review => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: review.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Rating, {\n                value: review.rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: review.createdAt.substring(0, 10)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: review.Comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 29\n              }, this)]\n            }, review._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Write a Customer Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 29\n              }, this), errorReview && /*#__PURE__*/_jsxDEV(Message, {\n                variant: \"danger\",\n                children: errorReview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 45\n              }, this), userInfo ? /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: submitHandler,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"rating\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    value: rating,\n                    onChange: e => setRating(e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"1\",\n                      children: \"1 - Poor\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"2\",\n                      children: \"2 - Fair\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"3\",\n                      children: \"3 - Good\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"4\",\n                      children: \"4 - Very Good\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"5\",\n                      children: \"5 - Excellent\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"comment\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Comment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    row: \"3\",\n                    value: comment,\n                    onChange: e => setComment(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"primary\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"please Sign it to review \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/login\",\n                  children: \"here\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 59\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductScreen, \"GBhqB8jmqVqdGbMgs2k47+MJpT8=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ProductScreen;\n\nconst mapStateToProps = state => {\n  return {\n    product: state.Product.product,\n    error: state.Product.error,\n    loading: state.Product.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: id => dispatch(productDetail(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductScreen);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["/home/metro/Desktop/projects/ecom-mern/frontend/src/screens/productscreen.js"],"names":["React","useState","useEffect","Link","Row","Col","Image","ListGroup","Card","Button","Rating","axios","productDetail","createproductReview","connect","Form","PRODUCT_UPDATE_REVIEW_REST","useDispatch","useSelector","Message","ProductScreen","props","qty","setQty","rating","setRating","comment","setComment","productReviewCreate","state","Product","success","successReview","loading","loadingReview","error","errorReview","userLogin","user","userInfo","dispatch","product","console","log","alert","type","fetchData","match","params","id","addToCartHandler","history","push","submitHandler","e","preventDefault","image","name","numReviews","price","description","countInStock","target","value","Array","keys","map","x","review","length","createdAt","substring","Comment","_id","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Row, Col, Image, ListGroup, Card, Button} from 'react-bootstrap'\nimport Rating from '../components/rating'\nimport axios from 'axios'\nimport {productDetail, createproductReview} from '../store/actions/productlist'\nimport { connect } from \"react-redux\";\nimport Form from 'react-bootstrap/Form'\nimport {PRODUCT_UPDATE_REVIEW_REST} from '../store/actions/actionTypes'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Message from '../components/Message'\n\n\nconst ProductScreen = (props) => {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const productReviewCreate = useSelector(state => state.Product)\n    const{success: successReview, loading:loadingReview, error: errorReview} = productReviewCreate\n\n    const userLogin = useSelector( (state) => state.user )\n    const {userInfo} = userLogin\n    \n    const dispatch = useDispatch()\n\n    const {product} = props\n    console.log(product)\n    \n   // const [product, setProduct] = useState([])\n    \n    useEffect( () => {\n\n        if(successReview) {\n            alert(\"Review Submitted !\")\n            setRating(0)\n            setComment('')\n            dispatch({type: PRODUCT_UPDATE_REVIEW_REST})\n        }\n       \n        // const fetchdata = async () => {\n        //     const {data} = await axios.get(`/api/products/${match.params.id}`)\n        //     setProduct(data)\n        // }\n\n        // fetchdata()\n\n\n        props.fetchData(props.match.params.id)\n\n\n    }, [dispatch, props.match, successReview] )\n\n\n    const addToCartHandler = () => {\n        props.history.push(`/cart/${props.match.params.id}?qty=${qty}`)\n    }\n\n    \n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createproductReview(props.match.id, {\n            rating, \n            comment\n        }))\n    }\n\n    return (\n        <React.Fragment>\n            <Link className=\"btn btn-dark my-3\" to =\"/\">\n                Go Back\n            </Link>\n            {\n                product ? (\n                    <React.Fragment>\n                        \n                        <Row>\n                <Col md={6}>\n                <Image src={product.image} alt={product.name} />\n                </Col>\n\n                <Col md={3}>\n                <ListGroup variant=\"flush\">\n                    <ListGroup.Item>\n                        <h3>{product.name}</h3>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <Rating value={product.rating} text={`${product.numReviews} reviews `} />\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        Price: ${product.price}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                    Description: ${product.description}\n                    </ListGroup.Item>\n\n                </ListGroup>\n                </Col>\n                <Col md={3}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>\n                                Price:\n                                </Col>\n                                \n                                <Col>\n                                <strong>${product.price}</strong>\n                                </Col>\n\n                            </Row>\n                        </ListGroup.Item>\n                    </ListGroup>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>\n                                Status:\n                                </Col>\n                                \n                                <Col>\n                               {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                </Col>\n\n                            </Row>\n                        </ListGroup.Item>\n\n\n                    </ListGroup>\n\n                    {product.countInStock > 0 && (\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Qty</Col>\n                                <Col>\n                                <Form.Control as=\"select\" value={qty} onChange={(e) => {\n                                    setQty(e.target.value)\n                                }}>\n\n                                {\n                                    [...Array(product.countInStock).keys()].map((x) => (\n                                        <option key={x+1} value={x+1} >\n                                            {x+1}\n                                        </option>\n                                    ))\n                                }\n                                    \n                                </Form.Control>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n                    )}\n\n\n                    <ListGroup.Item>\n                            <Button onClick={addToCartHandler} className=\"btn-block\" type=\"button\" disabled={product.countInStock ===0 } >\n                                Add To Cart\n                            </Button>\n                        </ListGroup.Item>\n\n                </Col>\n\n            </Row>\n            \n            <Row>\n                <Col md={6}>\n                    <h2>Reviews</h2>\n                    {product.review && product.review.length === 0 && <Message>No Reviews </Message>}\n                    <ListGroup variant=\"flush\">\n                        {product.review && product.review.map(review => (\n                            <ListGroup.Item key={review._id}>\n                                <strong>{review.name}</strong>\n                            <Rating value={review.rating} />\n                            <p>{review.createdAt.substring(0, 10)}</p>\n                            <p>{review.Comment}</p>\n                            </ListGroup.Item>\n                            \n\n                        ))}\n                        <ListGroup.Item>\n                            <h2>Write a Customer Review</h2>\n                            {errorReview && <Message variant=\"danger\">{errorReview}</Message>}\n                            {\n                            userInfo ? \n                            (\n                                <Form onSubmit={submitHandler}>\n                                    <Form.Group controlId=\"rating\" >\n                                        <Form.Label>Rating</Form.Label>\n                                        <Form.Control as=\"select\" value={rating}\n                                        onChange={(e) => setRating(e.target.value)}>\n                                            <option value=\"\">Select...</option>\n                                            <option value=\"1\">1 - Poor</option>\n                                            <option value=\"2\">2 - Fair</option>\n                                            <option value=\"3\">3 - Good</option>\n                                            <option value=\"4\">4 - Very Good</option>\n                                            <option value=\"5\">5 - Excellent</option>\n                                        </Form.Control>\n                                        \n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"comment\">\n                                            <Form.Label>Comment</Form.Label>\n                                            <Form.Control as=\"textarea\" row='3'\n                                            value={comment}\n                                            onChange={(e) => setComment(e.target.value)}>\n                                                \n                                            </Form.Control>\n\n                                        </Form.Group> \n\n                                        <Button type=\"submit\" variant=\"primary\">\n                                            Submit\n                                        </Button>\n\n                                </Form>\n                            ):\n                             <h2>please Sign it to review <Link to=\"/login\">here</Link> </h2> }\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n            </Row>\n\n                    </React.Fragment>\n                   \n\n                ): null\n            }\n            \n\n\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        product: state.Product.product,\n        error:state.Product.error,\n        loading: state.Product.loading\n    }\n    \n    \n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchData: (id) => dispatch(productDetail(id))\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductScreen)"]},"metadata":{},"sourceType":"module"}