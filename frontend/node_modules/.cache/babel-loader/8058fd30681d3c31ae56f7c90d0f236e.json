{"ast":null,"code":"var _jsxFileName = \"/home/metro/Desktop/projects/ecom-mern/frontend/src/screens/productscreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Card, Button } from 'react-bootstrap';\nimport Rating from '../components/rating';\nimport axios from 'axios';\nimport { productDetail, createproductReview } from '../store/actions/productlist';\nimport { connect } from \"react-redux\";\nimport Form from 'react-bootstrap/Form';\nimport { PRODUCT_UPDATE_REVIEW_REST } from '../store/actions/actionTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductScreen = props => {\n  _s();\n\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(''); // const [product, setProduct] = useState([])\n\n  useEffect(() => {\n    // const fetchdata = async () => {\n    //     const {data} = await axios.get(`/api/products/${match.params.id}`)\n    //     setProduct(data)\n    // }\n    // fetchdata()\n    props.fetchData(props.match.params.id);\n  }, [props.match]);\n\n  const addToCartHandler = () => {\n    props.history.push(`/cart/${props.match.params.id}?qty=${qty}`);\n  };\n\n  const {\n    product\n  } = props;\n  console.log(product);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-dark my-3\",\n      to: \"/\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), product ? /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          alt: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              value: product.rating,\n              text: `${product.numReviews} reviews `\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Price: $\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Description: $\", product.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: \"Price:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"$\", product.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: product.countInStock > 0 ? 'In Stock' : 'Out of Stock'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: \"Qty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: qty,\n                onChange: e => {\n                  setQty(e.target.value);\n                },\n                children: [...Array(product.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: x + 1,\n                  children: x + 1\n                }, x + 1, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: addToCartHandler,\n            className: \"btn-block\",\n            type: \"button\",\n            disabled: product.countInStock === 0,\n            children: \"Add To Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductScreen, \"nnbbpruSrMt0TYkmf01Od6SmQZA=\");\n\n_c = ProductScreen;\n\nconst mapStateToProps = state => {\n  return {\n    product: state.Product.product,\n    error: state.Product.error,\n    loading: state.Product.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: id => dispatch(productDetail(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductScreen);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["/home/metro/Desktop/projects/ecom-mern/frontend/src/screens/productscreen.js"],"names":["React","useState","useEffect","Link","Row","Col","Image","ListGroup","Card","Button","Rating","axios","productDetail","createproductReview","connect","Form","PRODUCT_UPDATE_REVIEW_REST","ProductScreen","props","qty","setQty","rating","setRating","comment","setComment","fetchData","match","params","id","addToCartHandler","history","push","product","console","log","image","name","numReviews","price","description","countInStock","e","target","value","Array","keys","map","x","mapStateToProps","state","Product","error","loading","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Row, Col, Image, ListGroup, Card, Button} from 'react-bootstrap'\nimport Rating from '../components/rating'\nimport axios from 'axios'\nimport {productDetail, createproductReview} from '../store/actions/productlist'\nimport { connect } from \"react-redux\";\nimport Form from 'react-bootstrap/Form'\nimport {PRODUCT_UPDATE_REVIEW_REST} from '../store/actions/actionTypes'\n\n\nconst ProductScreen = (props) => {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n    \n    \n   // const [product, setProduct] = useState([])\n    \n    useEffect( () => {\n       \n        // const fetchdata = async () => {\n        //     const {data} = await axios.get(`/api/products/${match.params.id}`)\n        //     setProduct(data)\n        // }\n\n        // fetchdata()\n\n\n        props.fetchData(props.match.params.id)\n\n\n    }, [props.match] )\n\n\n    const addToCartHandler = () => {\n        props.history.push(`/cart/${props.match.params.id}?qty=${qty}`)\n    }\n\n    const {product} = props\n    console.log(product)\n\n    return (\n        <React.Fragment>\n            <Link className=\"btn btn-dark my-3\" to =\"/\">\n                Go Back\n            </Link>\n            {\n                product ? (\n                    <Row>\n                <Col md={6}>\n                <Image src={product.image} alt={product.name} />\n                </Col>\n\n                <Col md={3}>\n                <ListGroup variant=\"flush\">\n                    <ListGroup.Item>\n                        <h3>{product.name}</h3>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <Rating value={product.rating} text={`${product.numReviews} reviews `} />\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        Price: ${product.price}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                    Description: ${product.description}\n                    </ListGroup.Item>\n\n                </ListGroup>\n                </Col>\n                <Col md={3}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>\n                                Price:\n                                </Col>\n                                \n                                <Col>\n                                <strong>${product.price}</strong>\n                                </Col>\n\n                            </Row>\n                        </ListGroup.Item>\n                    </ListGroup>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>\n                                Status:\n                                </Col>\n                                \n                                <Col>\n                               {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                </Col>\n\n                            </Row>\n                        </ListGroup.Item>\n\n\n                    </ListGroup>\n\n                    {product.countInStock > 0 && (\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Qty</Col>\n                                <Col>\n                                <Form.Control as=\"select\" value={qty} onChange={(e) => {\n                                    setQty(e.target.value)\n                                }}>\n\n                                {\n                                    [...Array(product.countInStock).keys()].map((x) => (\n                                        <option key={x+1} value={x+1} >\n                                            {x+1}\n                                        </option>\n                                    ))\n                                }\n                                    \n                                </Form.Control>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n                    )}\n\n\n                    <ListGroup.Item>\n                            <Button onClick={addToCartHandler} className=\"btn-block\" type=\"button\" disabled={product.countInStock ===0 } >\n                                Add To Cart\n                            </Button>\n                        </ListGroup.Item>\n\n                </Col>\n\n            </Row>\n                ): null\n            }\n            \n\n\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        product: state.Product.product,\n        error:state.Product.error,\n        loading: state.Product.loading\n    }\n    \n    \n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchData: (id) => dispatch(productDetail(id))\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductScreen)"]},"metadata":{},"sourceType":"module"}