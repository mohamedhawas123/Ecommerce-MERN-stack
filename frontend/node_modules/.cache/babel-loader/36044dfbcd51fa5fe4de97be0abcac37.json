{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nconst authStart = () => {\n  return {\n    type: actionTypes.USER_LOGIN_START\n  };\n};\n\nconst authSucess = token => {\n  return {\n    type: actionTypes.USER_LOGIN_SUCESS,\n    token: token\n  };\n};\n\nconst authFail = error => {\n  return {\n    type: actionTypes.USER_LOGIN_FAIL,\n    error: error\n  };\n};\n\nconst updateProfile = payload => {\n  return {\n    type: actionTypes.USER_PROFILE_UPDATE_SUCESS,\n    payload: payload\n  };\n};\n\nexport const authLogin = (email, password) => {\n  return dispatch => {\n    dispatch(authStart);\n    axios.post(`/api/users/login`, {\n      email: email,\n      password: password\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      const token = res.data.token;\n      localStorage.setItem(\"userInfo\", JSON.stringify(res.data));\n      dispatch(authSucess(res.data));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const UserDetail = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actionTypes.USER_PROFILE_START\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${getState().user.userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`api/users/${id}`, config);\n    console.log(data);\n    dispatch({\n      type: actionTypes.USER_PROFILE_SUCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.USER_PROFILE_FAIL,\n      error: error\n    });\n    console.log(error);\n  }\n};\nexport const updateUserProfile = (name, email, tokenn) => {\n  return dispatch => {\n    dispatch(authStart());\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${tokenn}`\n      }\n    };\n    axios.put(`api/users/profile`, {\n      name: name,\n      email: email\n    }, config).then(res => {\n      console.log(res.data);\n      dispatch(updateProfile(res.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const authSignup = (name, email, password) => {\n  return dispatch => {\n    dispatch(authStart);\n    axios.post(`/api/users`, {\n      name: name,\n      email: email,\n      password: password\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      const token = res.data.token;\n      localStorage.setItem(\"userInfo\", JSON.stringify(res.data));\n      dispatch(authSucess(token));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: actionTypes.USER_LOGOUT\n  });\n  dispatch({\n    type: actionTypes.ORDER_GET_REST\n  });\n  dispatch({\n    type: actionTypes.ORDER_LIST_REST\n  });\n  dispatch({\n    type: actionTypes.USER_LIST_REST\n  });\n};\nexport const listUser = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actionTypes.USER_LIST_REQUEST\n    });\n    const config = {\n      headers: {\n        Authorization: `Bearer ${getState().user.userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get('/api/users', config);\n    console.log(data);\n    dispatch({\n      type: actionTypes.USER_SUCESS_REQUEST,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.USER_FAIL_REQUEST,\n      error: error\n    });\n    console.log(error);\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actionTypes.USER_DELETE_REQUEST\n    });\n    const config = {\n      headers: {\n        Authorization: `Bearer ${getState().user.userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/api/users/${id}`, config);\n    console.log(data);\n    dispatch({\n      type: actionTypes.USER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.USER_DELETE_FAIL,\n      error: error\n    });\n    console.log(error);\n  }\n}; // try {\n//     dispatch({\n//         type: actionTypes.USER_PROFILE_UPDATE_START \n//     })\n//     const config = {\n//         headers: {\n//             'Content-Type': 'application/json',\n//             Authorization: `Bearer ${getState().user.userLogin.userInfo.token}`\n//         },\n//     }\n//     const {data} = await axios.put(\n//         `api/users/profile`, user, config)\n//     console.log(data)\n//     dispatch({\n//         type:actionTypes.USER_PROFILE_UPDATE_SUCESS,\n//         payload: data\n//     })\n// } catch (error) {\n//     dispatch({\n//         type: actionTypes.USER_PROFILE_UPDATE_FAIL,\n//         error: error\n//     })\n//     console.log(error)\n// }","map":{"version":3,"sources":["/home/metro/Desktop/projects/ecom-mern/frontend/src/store/actions/user.js"],"names":["actionTypes","axios","authStart","type","USER_LOGIN_START","authSucess","token","USER_LOGIN_SUCESS","authFail","error","USER_LOGIN_FAIL","updateProfile","payload","USER_PROFILE_UPDATE_SUCESS","authLogin","email","password","dispatch","post","headers","then","res","data","localStorage","setItem","JSON","stringify","catch","err","UserDetail","id","getState","USER_PROFILE_START","config","Authorization","user","userInfo","get","console","log","USER_PROFILE_SUCESS","USER_PROFILE_FAIL","updateUserProfile","name","tokenn","put","authSignup","logout","removeItem","USER_LOGOUT","ORDER_GET_REST","ORDER_LIST_REST","USER_LIST_REST","listUser","USER_LIST_REQUEST","USER_SUCESS_REQUEST","USER_FAIL_REQUEST","deleteUser","USER_DELETE_REQUEST","delete","USER_DELETE_SUCCESS","USER_DELETE_FAIL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,SAAS,GAAG,MAAM;AACpB,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADf,GAAP;AAGH,CAJD;;AAMA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,SAAO;AACHH,IAAAA,IAAI,EAAEH,WAAW,CAACO,iBADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALD;;AAQA,MAAME,QAAQ,GAAIC,KAAD,IAAW;AACxB,SAAO;AACHN,IAAAA,IAAI,EAAEH,WAAW,CAACU,eADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALD;;AAQA,MAAME,aAAa,GAAIC,OAAD,IAAa;AAC/B,SAAO;AACHT,IAAAA,IAAI,EAAEH,WAAW,CAACa,0BADf;AAEHD,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH,CALD;;AASA,OAAO,MAAME,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC1C,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACf,SAAD,CAAR;AACAD,IAAAA,KAAK,CAACiB,IAAN,CAAY,kBAAZ,EAA+B;AAC3BH,MAAAA,KAAK,EAAEA,KADoB;AAE3BC,MAAAA,QAAQ,EAAEA;AAFiB,KAA/B,EAGE;AACEG,MAAAA,OAAO,EAAC;AAAC,wBAAgB;AAAjB;AADV,KAHF,EAMCC,IAND,CAMMC,GAAG,IAAI;AACT,YAAMf,KAAK,GAAGe,GAAG,CAACC,IAAJ,CAAShB,KAAvB;AACAiB,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,GAAG,CAACC,IAAnB,CAAjC;AACAL,MAAAA,QAAQ,CAACZ,UAAU,CAACgB,GAAG,CAACC,IAAL,CAAX,CAAR;AACH,KAVD,EAWCK,KAXD,CAWOC,GAAG,IAAI;AACVX,MAAAA,QAAQ,CAACT,QAAQ,CAACoB,GAAD,CAAT,CAAR;AACH,KAbD;AAcH,GAhBD;AAiBH,CAlBM;AAqBP,OAAO,MAAMC,UAAU,GAAIC,EAAD,IAAS,OAAOb,QAAP,EAAiBc,QAAjB,KAA8B;AAE7D,MAAI;AACAd,IAAAA,QAAQ,CAAC;AACLd,MAAAA,IAAI,EAAEH,WAAW,CAACgC;AADb,KAAD,CAAR;AAMA,UAAMC,MAAM,GAAG;AACXd,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELe,QAAAA,aAAa,EAAG,UAASH,QAAQ,GAAGI,IAAX,CAAgBC,QAAhB,CAAyB9B,KAAM;AAFnD;AADE,KAAf;AAOA,UAAM;AAACgB,MAAAA;AAAD,QAAS,MAAMrB,KAAK,CAACoC,GAAN,CAChB,aAAYP,EAAG,EADC,EAEjBG,MAFiB,CAArB;AAKAK,IAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AAEAL,IAAAA,QAAQ,CAAC;AACLd,MAAAA,IAAI,EAACH,WAAW,CAACwC,mBADZ;AAEL5B,MAAAA,OAAO,EAAEU;AAFJ,KAAD,CAAR;AAKH,GA1BD,CA0BE,OAAOb,KAAP,EAAc;AACZQ,IAAAA,QAAQ,CAAC;AACLd,MAAAA,IAAI,EAAEH,WAAW,CAACyC,iBADb;AAELhC,MAAAA,KAAK,EAAEA;AAFF,KAAD,CAAR;AAKA6B,IAAAA,OAAO,CAACC,GAAR,CAAY9B,KAAZ;AAEH;AAGJ,CAvCM;AA2CP,OAAO,MAAMiC,iBAAiB,GAAG,CAACC,IAAD,EAAO5B,KAAP,EAAc6B,MAAd,KAAyB;AAEtD,SAAO3B,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACf,SAAS,EAAV,CAAR;AACA,UAAM+B,MAAM,GAAG;AACHd,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELe,QAAAA,aAAa,EAAG,UAASU,MAAO;AAF3B;AADN,KAAf;AAMD3C,IAAAA,KAAK,CAAC4C,GAAN,CAAW,mBAAX,EAA+B;AAC1BF,MAAAA,IAAI,EAACA,IADqB;AAE1B5B,MAAAA,KAAK,EAACA;AAFoB,KAA/B,EAGIkB,MAHJ,EAIEb,IAJF,CAIOC,GAAG,IAAI;AACTiB,MAAAA,OAAO,CAACC,GAAR,CAAYlB,GAAG,CAACC,IAAhB;AACAL,MAAAA,QAAQ,CAACN,aAAa,CAACU,GAAG,CAACC,IAAL,CAAd,CAAR;AACH,KAPF,EAQEK,KARF,CAQQC,GAAG,IAAI;AACVU,MAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AACH,KAVF;AAWF,GAnBD;AAwBH,CA1BM;AAgCP,OAAO,MAAMkB,UAAU,GAAG,CAACH,IAAD,EAAO5B,KAAP,EAAcC,QAAd,KAA2B;AACjD,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACf,SAAD,CAAR;AACAD,IAAAA,KAAK,CAACiB,IAAN,CAAY,YAAZ,EAAyB;AACrByB,MAAAA,IAAI,EAAEA,IADe;AAErB5B,MAAAA,KAAK,EAAEA,KAFc;AAGrBC,MAAAA,QAAQ,EAAEA;AAHW,KAAzB,EAIE;AACEG,MAAAA,OAAO,EAAC;AAAC,wBAAgB;AAAjB;AADV,KAJF,EAOCC,IAPD,CAOMC,GAAG,IAAI;AACT,YAAMf,KAAK,GAAGe,GAAG,CAACC,IAAJ,CAAShB,KAAvB;AACAiB,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,GAAG,CAACC,IAAnB,CAAjC;AACAL,MAAAA,QAAQ,CAACZ,UAAU,CAACC,KAAD,CAAX,CAAR;AACH,KAXD,EAYCqB,KAZD,CAYOC,GAAG,IAAI;AACVX,MAAAA,QAAQ,CAACT,QAAQ,CAACoB,GAAD,CAAT,CAAR;AACH,KAdD;AAeH,GAjBD;AAkBH,CAnBM;AAqBP,OAAO,MAAOmB,MAAM,GAAG,MAAO9B,QAAD,IAAc;AAEvCM,EAAAA,YAAY,CAACyB,UAAb,CAAwB,UAAxB;AAEA/B,EAAAA,QAAQ,CAAE;AAACd,IAAAA,IAAI,EAAEH,WAAW,CAACiD;AAAnB,GAAF,CAAR;AACAhC,EAAAA,QAAQ,CAAE;AAACd,IAAAA,IAAI,EAAEH,WAAW,CAACkD;AAAnB,GAAF,CAAR;AACAjC,EAAAA,QAAQ,CAAE;AAACd,IAAAA,IAAI,EAAEH,WAAW,CAACmD;AAAnB,GAAF,CAAR;AACAlC,EAAAA,QAAQ,CAAE;AAACd,IAAAA,IAAI,EAAEH,WAAW,CAACoD;AAAnB,GAAF,CAAR;AACH,CARM;AAaP,OAAO,MAAMC,QAAQ,GAAG,MAAO,OAAOpC,QAAP,EAAiBc,QAAjB,KAA8B;AAEzD,MAAI;AACAd,IAAAA,QAAQ,CAAC;AACLd,MAAAA,IAAI,EAAEH,WAAW,CAACsD;AADb,KAAD,CAAR;AAMA,UAAMrB,MAAM,GAAG;AACXd,MAAAA,OAAO,EAAE;AAELe,QAAAA,aAAa,EAAG,UAASH,QAAQ,GAAGI,IAAX,CAAgBC,QAAhB,CAAyB9B,KAAM;AAFnD;AADE,KAAf;AAOA,UAAM;AAACgB,MAAAA;AAAD,QAAS,MAAMrB,KAAK,CAACoC,GAAN,CACjB,YADiB,EAEjBJ,MAFiB,CAArB;AAKAK,IAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AAEAL,IAAAA,QAAQ,CAAC;AACLd,MAAAA,IAAI,EAACH,WAAW,CAACuD,mBADZ;AAEL3C,MAAAA,OAAO,EAAEU;AAFJ,KAAD,CAAR;AAKH,GA1BD,CA0BE,OAAOb,KAAP,EAAc;AACZQ,IAAAA,QAAQ,CAAC;AACLd,MAAAA,IAAI,EAAEH,WAAW,CAACwD,iBADb;AAEL/C,MAAAA,KAAK,EAAEA;AAFF,KAAD,CAAR;AAKA6B,IAAAA,OAAO,CAACC,GAAR,CAAY9B,KAAZ;AAEH;AAGJ,CAvCM;AA0CP,OAAO,MAAMgD,UAAU,GAAI3B,EAAD,IAAS,OAAOb,QAAP,EAAiBc,QAAjB,KAA8B;AAE7D,MAAI;AACAd,IAAAA,QAAQ,CAAC;AACLd,MAAAA,IAAI,EAAEH,WAAW,CAAC0D;AADb,KAAD,CAAR;AAMA,UAAMzB,MAAM,GAAG;AACXd,MAAAA,OAAO,EAAE;AAELe,QAAAA,aAAa,EAAG,UAASH,QAAQ,GAAGI,IAAX,CAAgBC,QAAhB,CAAyB9B,KAAM;AAFnD;AADE,KAAf;AAOA,UAAM;AAACgB,MAAAA;AAAD,QAAS,MAAMrB,KAAK,CAAC0D,MAAN,CAChB,cAAa7B,EAAG,EADA,EAEjBG,MAFiB,CAArB;AAKAK,IAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AAEAL,IAAAA,QAAQ,CAAC;AACLd,MAAAA,IAAI,EAACH,WAAW,CAAC4D,mBADZ;AAELhD,MAAAA,OAAO,EAAEU;AAFJ,KAAD,CAAR;AAKH,GA1BD,CA0BE,OAAOb,KAAP,EAAc;AACZQ,IAAAA,QAAQ,CAAC;AACLd,MAAAA,IAAI,EAAEH,WAAW,CAAC6D,gBADb;AAELpD,MAAAA,KAAK,EAAEA;AAFF,KAAD,CAAR;AAKA6B,IAAAA,OAAO,CAACC,GAAR,CAAY9B,KAAZ;AAEH;AAGJ,CAvCM,C,CA4CP;AACI;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import * as actionTypes from './actionTypes'\nimport axios from 'axios'\n\n\nconst authStart = () => {\n    return {\n        type: actionTypes.USER_LOGIN_START\n    }\n}\n\nconst authSucess = (token) => {\n    return {\n        type: actionTypes.USER_LOGIN_SUCESS,\n        token: token\n    }\n}\n\n\nconst authFail = (error) => {\n    return {\n        type: actionTypes.USER_LOGIN_FAIL,\n        error: error\n    }\n}\n\n\nconst updateProfile = (payload) => {\n    return {\n        type: actionTypes.USER_PROFILE_UPDATE_SUCESS,\n        payload: payload\n    }\n}\n\n\n\nexport const authLogin = (email, password) => {\n    return dispatch => {\n        dispatch(authStart)\n        axios.post(`/api/users/login`, {\n            email: email,\n            password: password\n        },{\n            headers:{'Content-Type': 'application/json'}\n        })\n        .then(res => {\n            const token = res.data.token\n            localStorage.setItem(\"userInfo\", JSON.stringify(res.data))\n            dispatch(authSucess(res.data))\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\n\nexport const UserDetail = (id) =>  async (dispatch, getState) => {\n    \n    try {\n        dispatch({\n            type: actionTypes.USER_PROFILE_START\n        })\n    \n        \n    \n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${getState().user.userInfo.token}`\n            },\n        }\n    \n        const {data} = await axios.get(\n            `api/users/${id}`,\n            config\n        )\n\n        console.log(data)\n    \n        dispatch({\n            type:actionTypes.USER_PROFILE_SUCESS,\n            payload: data\n        })\n    \n    } catch (error) {\n        dispatch({\n            type: actionTypes.USER_PROFILE_FAIL,\n            error: error\n        })\n\n        console.log(error)\n\n    }\n    \n\n}\n\n\n\nexport const updateUserProfile = (name, email, tokenn) => {\n    \n    return dispatch => {\n        dispatch(authStart())\n        const config = {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${tokenn}`\n                    },\n                }\n       axios.put(`api/users/profile`, {\n            name:name,\n            email:email\n        }, config)\n        .then(res => {\n            console.log(res.data)\n            dispatch(updateProfile(res.data))\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n    \n\n    \n\n}\n\n\n\n\n\nexport const authSignup = (name, email, password) => {\n    return dispatch => {\n        dispatch(authStart)\n        axios.post(`/api/users`, {\n            name: name,\n            email: email,\n            password: password\n        },{\n            headers:{'Content-Type': 'application/json'}\n        })\n        .then(res => {\n            const token = res.data.token\n            localStorage.setItem(\"userInfo\", JSON.stringify(res.data))\n            dispatch(authSucess(token))\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const  logout = () => (dispatch) => {\n\n    localStorage.removeItem(\"userInfo\")\n\n    dispatch ({type: actionTypes.USER_LOGOUT})\n    dispatch ({type: actionTypes.ORDER_GET_REST})\n    dispatch ({type: actionTypes.ORDER_LIST_REST})\n    dispatch ({type: actionTypes.USER_LIST_REST})\n}\n\n\n\n\nexport const listUser = () =>  async (dispatch, getState) => {\n    \n    try {\n        dispatch({\n            type: actionTypes.USER_LIST_REQUEST\n        })\n    \n        \n    \n        const config = {\n            headers: {\n            \n                Authorization: `Bearer ${getState().user.userInfo.token}`\n            },\n        }\n    \n        const {data} = await axios.get(\n            '/api/users',\n            config\n        )\n\n        console.log(data)\n    \n        dispatch({\n            type:actionTypes.USER_SUCESS_REQUEST,\n            payload: data\n        })\n    \n    } catch (error) {\n        dispatch({\n            type: actionTypes.USER_FAIL_REQUEST,\n            error: error\n        })\n\n        console.log(error)\n\n    }\n    \n\n}\n\n\nexport const deleteUser = (id) =>  async (dispatch, getState) => {\n    \n    try {\n        dispatch({\n            type: actionTypes.USER_DELETE_REQUEST\n        })\n    \n        \n    \n        const config = {\n            headers: {\n            \n                Authorization: `Bearer ${getState().user.userInfo.token}`\n            },\n        }\n    \n        const {data} = await axios.delete(\n            `/api/users/${id}`,\n            config\n        )\n\n        console.log(data)\n    \n        dispatch({\n            type:actionTypes.USER_DELETE_SUCCESS,\n            payload: data\n        })\n    \n    } catch (error) {\n        dispatch({\n            type: actionTypes.USER_DELETE_FAIL,\n            error: error\n        })\n\n        console.log(error)\n\n    }\n    \n\n}\n\n\n\n\n// try {\n    //     dispatch({\n    //         type: actionTypes.USER_PROFILE_UPDATE_START \n    //     })\n    \n       \n    //     const config = {\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //             Authorization: `Bearer ${getState().user.userLogin.userInfo.token}`\n    //         },\n    //     }\n    \n    //     const {data} = await axios.put(\n    //         `api/users/profile`, user, config)\n\n    //     console.log(data)\n    \n    //     dispatch({\n    //         type:actionTypes.USER_PROFILE_UPDATE_SUCESS,\n    //         payload: data\n    //     })\n    \n    // } catch (error) {\n    //     dispatch({\n    //         type: actionTypes.USER_PROFILE_UPDATE_FAIL,\n    //         error: error\n    //     })\n\n    //     console.log(error)\n\n    // }\n    "]},"metadata":{},"sourceType":"module"}