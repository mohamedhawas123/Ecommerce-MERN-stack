{"ast":null,"code":"import _toConsumableArray from\"/home/metro/Desktop/projects/ecom-mern/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/metro/Desktop/projects/ecom-mern/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as actionTypes from'../actions/actionTypes';import{updateObject}from'../utilty';var cartItemsFromStorage=localStorage.getItem(\"cartItems\")?JSON.parse(localStorage.getItem(\"cartItems\")):[];console.log(localStorage);var shippingAddressFromStorage=localStorage.getItem(\"shippingAddress\")?JSON.parse(localStorage.getItem(\"shippingAddress\")):{};var PaymenthMethodFromStorage=localStorage.getItem(\"PaymentMethod\")?JSON.parse(localStorage.getItem(\"PaymentMethod\")):{};var initalState={cartItems:[],shippingAddress:{},paymenthMethod:{},cart:{cartItems:cartItemsFromStorage,shippingAddress:shippingAddressFromStorage,paymenthMethod:PaymenthMethodFromStorage}};var addToCart=function addToCart(state,action){var item=action.item;console.log(action);var existItem=state.cartItems.find(function(x){return x.product===item._id;});if(existItem){return _objectSpread(_objectSpread({},state),{},{cartItems:state.cartItems.map(function(e){return e.product===existItem._id?item:e;})});}else{return _objectSpread(_objectSpread({},state),{},{cartItems:[].concat(_toConsumableArray(state.cartItems),[item])});}};var removeFromCart=function removeFromCart(state,action){return _objectSpread(_objectSpread({},state),{},{cartItems:state.cartItems.filter(function(e){return e.product!==action.payload;})});};var saveShippingAddress=function saveShippingAddress(state,action){return _objectSpread(_objectSpread({},state),{},{shippingAddress:action.payload});};var savePaymentMethod=function savePaymentMethod(state,action){return _objectSpread(_objectSpread({},state),{},{paymenthMethod:action.payload});};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initalState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.CART_ADD_ITEM:return addToCart(state,action);case actionTypes.CART_REMOVE_ITEM:return removeFromCart(state,action);case actionTypes.CART_SAVE_SHAPPING_ADDRESS:return saveShippingAddress(state,action);case actionTypes.CART_SAVE_PAYMENT_METHOD:return savePaymentMethod(state,action);default:return state;}};export default reducer;","map":{"version":3,"sources":["/home/metro/Desktop/projects/ecom-mern/frontend/src/store/reducer/cart.js"],"names":["actionTypes","updateObject","cartItemsFromStorage","localStorage","getItem","JSON","parse","console","log","shippingAddressFromStorage","PaymenthMethodFromStorage","initalState","cartItems","shippingAddress","paymenthMethod","cart","addToCart","state","action","item","existItem","find","x","product","_id","map","e","removeFromCart","filter","payload","saveShippingAddress","savePaymentMethod","reducer","type","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHAPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\nimport {updateObject} from '../utilty'\n\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")  ? JSON.parse(localStorage.getItem(\"cartItems\")): [] \nconsole.log(localStorage)\n\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")  ? JSON.parse(localStorage.getItem(\"shippingAddress\")): {} \n\n\nconst PaymenthMethodFromStorage = localStorage.getItem(\"PaymentMethod\")  ? JSON.parse(localStorage.getItem(\"PaymentMethod\")): {} \n\n\n\nconst initalState = {\n    cartItems : [],\n    shippingAddress: {},\n    paymenthMethod: {},\n    cart: {cartItems: cartItemsFromStorage, shippingAddress:shippingAddressFromStorage, paymenthMethod: PaymenthMethodFromStorage },\n\n}\n\n\nconst addToCart = (state, action) => {\n    const item = action.item\n    console.log(action)\n    const existItem = state.cartItems.find(x => x.product === item._id)\n    \n    if(existItem) {\n        return {\n            ...state,\n            cartItems: state.cartItems.map(e => e.product === existItem._id ? item: e)\n        }\n\n    }else {\n        return {\n            ...state,\n            cartItems:[...state.cartItems, item]\n        }\n    }\n}\n\n\nconst removeFromCart = (state,action) => {\n    return {\n        ...state, \n        cartItems: state.cartItems.filter(e => e.product !== action.payload)\n    }\n}\n\n\nconst saveShippingAddress = (state,action) => {\n    return {\n        ...state, \n        shippingAddress: action.payload\n    }\n}\n\nconst savePaymentMethod = (state,action) => {\n    return {\n        ...state, \n        paymenthMethod: action.payload\n    }\n}\n\n\n\n\nconst reducer = (state=initalState, action) => {\n    switch(action.type) {\n        case actionTypes.CART_ADD_ITEM: return addToCart(state, action)\n        case actionTypes.CART_REMOVE_ITEM: return removeFromCart(state, action)\n        case actionTypes.CART_SAVE_SHAPPING_ADDRESS: return saveShippingAddress(state, action)\n        case actionTypes.CART_SAVE_PAYMENT_METHOD: return savePaymentMethod(state, action)\n\n        default:\n            return state\n    }\n}\n\nexport default reducer\n\n\n"]},"metadata":{},"sourceType":"module"}