{"ast":null,"code":"import _slicedToArray from\"/home/metro/Desktop/projects/ecom-mern/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/formcontainer';import{saveShippingAddress}from'../store/actions/cart';import CheckoutSteps from'../components/checkoutSteps';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ShippingAddres=function ShippingAddres(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var _useState=useState(shippingAddress.address),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState(shippingAddress.city),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState(shippingAddress.postelcode),_useState6=_slicedToArray(_useState5,2),postelcode=_useState6[0],setPostelCode=_useState6[1];var _useState7=useState(shippingAddress.country),_useState8=_slicedToArray(_useState7,2),country=_useState8[0],setCountry=_useState8[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();console.log(\"continue\");dispatch(saveShippingAddress({address:address,city:city,postelcode:postelcode,country:country}));history.push('/payment');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Shipping\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"Address\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter Address\",value:address,onChange:function onChange(e){return setAddress(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"city\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"City\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter City\",value:city,onChange:function onChange(e){return setCity(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"postelCode\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"postelCode\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter PostelCode\",value:postelcode,onChange:function onChange(e){return setPostelCode(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"country\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Country\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter Country\",value:country,onChange:function onChange(e){return setCountry(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});};export default ShippingAddres;","map":{"version":3,"sources":["/home/metro/Desktop/projects/ecom-mern/frontend/src/screens/shippingScrean.js"],"names":["React","useEffect","useState","Form","Button","useDispatch","useSelector","FormContainer","saveShippingAddress","CheckoutSteps","ShippingAddres","history","cart","state","shippingAddress","address","setAddress","city","setCity","postelcode","setPostelCode","country","setCountry","dispatch","submitHandler","e","preventDefault","console","log","push","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Form, Button} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport FormContainer from '../components/formcontainer'\nimport {saveShippingAddress} from '../store/actions/cart'\nimport CheckoutSteps from '../components/checkoutSteps'\n\n\n\nconst ShippingAddres = ({history}) => {\n\n\n    const cart = useSelector(state => state.cart)\n    \n    const shippingAddress = cart.shippingAddress\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postelcode, setPostelCode] = useState(shippingAddress.postelcode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const dispatch = useDispatch()\n\n\n    \n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        console.log(\"continue\")\n        dispatch(saveShippingAddress({address, city, postelcode, country }))\n        history.push('/payment')\n    }\n\n    \n\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"Address\">\n                <Form.Label>Address</Form.Label>\n                <Form.Control\n                 type=\"text\"\n                  placeholder=\"Enter Address\"\n                  value={address}\n                onChange={(e)=> setAddress(e.target.value) }>\n\n                </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"city\">\n                <Form.Label>City</Form.Label>\n                <Form.Control\n                 type=\"text\"\n                  placeholder=\"Enter City\"\n                  value={city}\n                onChange={(e)=> setCity(e.target.value) }>\n\n                </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"postelCode\">\n                <Form.Label>postelCode</Form.Label>\n                <Form.Control\n                 type=\"text\"\n                  placeholder=\"Enter PostelCode\"\n                  value={postelcode}\n                onChange={(e)=> setPostelCode(e.target.value) }>\n\n                </Form.Control>\n            </Form.Group>\n\n\n            <Form.Group controlId=\"country\">\n                <Form.Label>Country</Form.Label>\n                <Form.Control\n                 type=\"text\"\n                  placeholder=\"Enter Country\"\n                  value={country}\n                onChange={(e)=> setCountry(e.target.value) }>\n\n                </Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n                Continue\n            </Button>\n\n\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingAddres"]},"metadata":{},"sourceType":"module"}