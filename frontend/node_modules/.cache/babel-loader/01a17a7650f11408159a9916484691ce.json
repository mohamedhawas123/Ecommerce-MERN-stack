{"ast":null,"code":"import React from 'react';\nimport { updateObject } from '../utilty';\nimport * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  loading: true,\n  success: false,\n  order: null,\n  orderItems: [],\n  shippingAddress: {},\n  error: null,\n  orders: []\n};\n\nconst createOrderStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst createOrderSucess = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    order: action.payload,\n    success: true\n  });\n};\n\nconst createOrderFail = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    success: false\n  });\n};\n\nconst getOrderStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst getOrderSucess = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    order: action.payload\n  });\n};\n\nconst getOrderFail = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    success: false,\n    error: action.error\n  });\n};\n\nconst payOrderStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst payOrderSucess = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    success: true\n  });\n};\n\nconst payOrderFail = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    error: action.error\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ORDER_CREATE_START:\n      return createOrderStart(state, action);\n\n    case actionTypes.ORDER_CREATE_SUCCESS:\n      return createOrderSucess(state, action);\n\n    case actionTypes.ORDER_CREATE_FAIL:\n      return createOrderFail(state, action);\n\n    case actionTypes.ORDER_GET_START:\n      return getOrderStart(state, action);\n\n    case actionTypes.ORDER_GET_SUCCESS:\n      return getOrderSucess(state, action);\n\n    case actionTypes.ORDER_GET_FAIL:\n      return getOrderFail(state, action);\n\n    case actionTypes.ORDER_PAY_START:\n      return payOrderStart(state, action);\n\n    case actionTypes.ORDER_PAY_SUCCESS:\n      return payOrderSucess(state, action);\n\n    case actionTypes.ORDER_PAY_FAIL:\n      return payOrderFail(state, action);\n\n    case actionTypes.ORDER_PAY_REST:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/metro/Desktop/projects/ecom-mern/frontend/src/store/reducer/ordercreate.js"],"names":["React","updateObject","actionTypes","initialState","loading","success","order","orderItems","shippingAddress","error","orders","createOrderStart","state","action","createOrderSucess","payload","createOrderFail","getOrderStart","getOrderSucess","getOrderFail","payOrderStart","payOrderSucess","payOrderFail","reducer","type","ORDER_CREATE_START","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_GET_START","ORDER_GET_SUCCESS","ORDER_GET_FAIL","ORDER_PAY_START","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REST"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,WAA3B;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B;AAIA,MAAMC,YAAY,GAAG;AAEjBC,EAAAA,OAAO,EAAE,IAFQ;AAGjBC,EAAAA,OAAO,EAAE,KAHQ;AAIjBC,EAAAA,KAAK,EAAE,IAJU;AAKjBC,EAAAA,UAAU,EAAE,EALK;AAMjBC,EAAAA,eAAe,EAAE,EANA;AAOjBC,EAAAA,KAAK,EAAE,IAPU;AAQjBC,EAAAA,MAAM,EAAE;AARS,CAArB;;AAYA,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,SAAOZ,YAAY,CAACW,KAAD,EAAQ;AACvBR,IAAAA,OAAO,EAAE;AADc,GAAR,CAAnB;AAGH,CAJD;;AAQA,MAAMU,iBAAiB,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACzC,SAAOZ,YAAY,CAACW,KAAD,EAAQ;AACvBR,IAAAA,OAAO,EAAE,KADc;AAEvBE,IAAAA,KAAK,EAAEO,MAAM,CAACE,OAFS;AAGvBV,IAAAA,OAAO,EAAE;AAHc,GAAR,CAAnB;AAKH,CAND;;AASA,MAAMW,eAAe,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACvC,SAAOZ,YAAY,CAACW,KAAD,EAAQ;AACvBR,IAAAA,OAAO,EAAE,KADc;AAEvBC,IAAAA,OAAO,EAAE;AAFc,GAAR,CAAnB;AAIH,CALD;;AASA,MAAMY,aAAa,GAAG,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACrC,SAAOZ,YAAY,CAACW,KAAD,EAAQ;AACvBR,IAAAA,OAAO,EAAE;AADc,GAAR,CAAnB;AAGH,CAJD;;AAQA,MAAMc,cAAc,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACtC,SAAOZ,YAAY,CAACW,KAAD,EAAQ;AACvBR,IAAAA,OAAO,EAAE,KADc;AAEvBE,IAAAA,KAAK,EAAEO,MAAM,CAACE;AAFS,GAAR,CAAnB;AAKH,CAND;;AASA,MAAMI,YAAY,GAAG,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACpC,SAAOZ,YAAY,CAACW,KAAD,EAAQ;AACvBR,IAAAA,OAAO,EAAE,KADc;AAEvBC,IAAAA,OAAO,EAAE,KAFc;AAGvBI,IAAAA,KAAK,EAAEI,MAAM,CAACJ;AAHS,GAAR,CAAnB;AAKH,CAND;;AAUA,MAAMW,aAAa,GAAG,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACrC,SAAOZ,YAAY,CAACW,KAAD,EAAQ;AACvBR,IAAAA,OAAO,EAAE;AADc,GAAR,CAAnB;AAGH,CAJD;;AAQA,MAAMiB,cAAc,GAAG,CAACT,KAAD,EAAQC,MAAR,KAAmB;AACtC,SAAOZ,YAAY,CAACW,KAAD,EAAQ;AACvBR,IAAAA,OAAO,EAAE,KADc;AAEvBC,IAAAA,OAAO,EAAE;AAFc,GAAR,CAAnB;AAKH,CAND;;AASA,MAAMiB,YAAY,GAAG,CAACV,KAAD,EAAQC,MAAR,KAAmB;AACpC,SAAOZ,YAAY,CAACW,KAAD,EAAQ;AACvBR,IAAAA,OAAO,EAAE,KADc;AAEvBK,IAAAA,KAAK,EAAEI,MAAM,CAACJ;AAFS,GAAR,CAAnB;AAIH,CALD;;AAaA,MAAOc,OAAO,GAAG,CAACX,KAAK,GAACT,YAAP,EAAqBU,MAArB,KAAgC;AAC7C,UAAOA,MAAM,CAACW,IAAd;AACI,SAAKtB,WAAW,CAACuB,kBAAjB;AAAqC,aAAOd,gBAAgB,CAACC,KAAD,EAAQC,MAAR,CAAvB;;AACrC,SAAKX,WAAW,CAACwB,oBAAjB;AAAuC,aAAOZ,iBAAiB,CAACF,KAAD,EAAQC,MAAR,CAAxB;;AACvC,SAAKX,WAAW,CAACyB,iBAAjB;AAAoC,aAAOX,eAAe,CAACJ,KAAD,EAAQC,MAAR,CAAtB;;AAEpC,SAAKX,WAAW,CAAC0B,eAAjB;AAAkC,aAAOX,aAAa,CAACL,KAAD,EAAQC,MAAR,CAApB;;AAClC,SAAKX,WAAW,CAAC2B,iBAAjB;AAAoC,aAAOX,cAAc,CAACN,KAAD,EAAQC,MAAR,CAArB;;AACpC,SAAKX,WAAW,CAAC4B,cAAjB;AAAiC,aAAOX,YAAY,CAACP,KAAD,EAAQC,MAAR,CAAnB;;AAEjC,SAAKX,WAAW,CAAC6B,eAAjB;AAAkC,aAAOX,aAAa,CAACR,KAAD,EAAQC,MAAR,CAApB;;AAClC,SAAKX,WAAW,CAAC8B,iBAAjB;AAAoC,aAAOX,cAAc,CAACT,KAAD,EAAQC,MAAR,CAArB;;AACpC,SAAKX,WAAW,CAAC+B,cAAjB;AAAiC,aAAOX,YAAY,CAACV,KAAD,EAAQC,MAAR,CAAnB;;AAEjC,SAAKX,WAAW,CAACgC,cAAjB;AACA,aAAO,EAAP;;AAEA;AACI,aAAOtB,KAAP;AAjBR;AAqBH,CAtBD;;AAwBA,eAAeW,OAAf","sourcesContent":["import React from 'react'\nimport {updateObject} from '../utilty'\nimport * as actionTypes from '../actions/actionTypes'\n\n\n\nconst initialState = {\n\n    loading: true,\n    success: false,\n    order: null,\n    orderItems: [],\n    shippingAddress: {},\n    error: null,\n    orders: []\n}\n\n\nconst createOrderStart = (state, action) => {\n    return updateObject(state, {\n        loading: true\n    })\n}\n\n\n\nconst createOrderSucess = (state, action) => {\n    return updateObject(state, {\n        loading: false,\n        order: action.payload,\n        success: true\n    })\n}\n\n\nconst createOrderFail = (state, action) => {\n    return updateObject(state, {\n        loading: false,\n        success: false\n    })\n}\n\n\n\nconst getOrderStart = (state, action) => {\n    return updateObject(state, {\n        loading: true\n    })\n}\n\n\n\nconst getOrderSucess = (state, action) => {\n    return updateObject(state, {\n        loading: false,\n        order: action.payload,\n        \n    })\n}\n\n\nconst getOrderFail = (state, action) => {\n    return updateObject(state, {\n        loading: false,\n        success: false, \n        error: action.error\n    })\n}\n\n\n\nconst payOrderStart = (state, action) => {\n    return updateObject(state, {\n        loading: true\n    })\n}\n\n\n\nconst payOrderSucess = (state, action) => {\n    return updateObject(state, {\n        loading: false,\n        success: true\n        \n    })\n}\n\n\nconst payOrderFail = (state, action) => {\n    return updateObject(state, {\n        loading: false,\n        error: action.error\n    })\n}\n\n\n\n\n\n\n\nconst  reducer = (state=initialState, action) => {\n    switch(action.type) {\n        case actionTypes.ORDER_CREATE_START: return createOrderStart(state, action)\n        case actionTypes.ORDER_CREATE_SUCCESS: return createOrderSucess(state, action)\n        case actionTypes.ORDER_CREATE_FAIL: return createOrderFail(state, action)\n        \n        case actionTypes.ORDER_GET_START: return getOrderStart(state, action)\n        case actionTypes.ORDER_GET_SUCCESS: return getOrderSucess(state, action)\n        case actionTypes.ORDER_GET_FAIL: return getOrderFail(state, action)\n\n        case actionTypes.ORDER_PAY_START: return payOrderStart(state, action)\n        case actionTypes.ORDER_PAY_SUCCESS: return payOrderSucess(state, action)\n        case actionTypes.ORDER_PAY_FAIL: return payOrderFail(state, action)\n\n        case actionTypes.ORDER_PAY_REST: \n        return {}\n\n        default:\n            return state\n\n        \n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}