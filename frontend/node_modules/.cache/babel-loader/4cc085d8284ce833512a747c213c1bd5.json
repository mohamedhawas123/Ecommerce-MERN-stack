{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nconst authStart = () => {\n  return {\n    type: actionTypes.USER_LOGIN_START\n  };\n};\n\nconst authSucess = token => {\n  return {\n    type: actionTypes.USER_LOGIN_SUCESS,\n    token: token\n  };\n};\n\nconst authFail = error => {\n  return {\n    type: actionTypes.USER_LOGIN_FAIL,\n    error: error\n  };\n};\n\nexport const authLogin = (email, password) => {\n  return dispatch => {\n    dispatch(authStart);\n    axios.post(`/api/users/login`, {\n      email: email,\n      password: password\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      const token = res.data.token;\n      localStorage.setItem(\"userInfo\", JSON.stringify(res.data));\n      dispatch(authSucess(res.data));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const UserDetail = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actionTypes.USER_PROFILE_START\n    });\n    const userinfo = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.userinfo.user.userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`api/users/${id}`, config);\n    dispatch({\n      type: actionTypes.USER_PROFILE_SUCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.USER_PROFILE_FAIL,\n      payload: error\n    });\n  }\n};\nexport const authSignup = (name, email, password) => {\n  return dispatch => {\n    dispatch(authStart);\n    axios.post(`/api/users`, {\n      name: name,\n      email: email,\n      password: password\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      const token = res.data.token;\n      localStorage.setItem(\"userInfo\", JSON.stringify(res.data));\n      dispatch(authSucess(token));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: actionTypes.USER_LOGOUT\n  });\n};","map":{"version":3,"sources":["/home/metro/Desktop/projects/ecom-mern/frontend/src/store/actions/user.js"],"names":["actionTypes","axios","authStart","type","USER_LOGIN_START","authSucess","token","USER_LOGIN_SUCESS","authFail","error","USER_LOGIN_FAIL","authLogin","email","password","dispatch","post","headers","then","res","data","localStorage","setItem","JSON","stringify","catch","err","UserDetail","id","getState","USER_PROFILE_START","userinfo","config","Authorization","userInfo","user","get","USER_PROFILE_SUCESS","payload","USER_PROFILE_FAIL","authSignup","name","logout","removeItem","USER_LOGOUT"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes'\nimport axios from 'axios'\n\n\nconst authStart = () => {\n    return {\n        type: actionTypes.USER_LOGIN_START\n    }\n}\n\nconst authSucess = (token) => {\n    return {\n        type: actionTypes.USER_LOGIN_SUCESS,\n        token: token\n    }\n}\n\n\nconst authFail = (error) => {\n    return {\n        type: actionTypes.USER_LOGIN_FAIL,\n        error: error\n    }\n}\n\n\nexport const authLogin = (email, password) => {\n    return dispatch => {\n        dispatch(authStart)\n        axios.post(`/api/users/login`, {\n            email: email,\n            password: password\n        },{\n            headers:{'Content-Type': 'application/json'}\n        })\n        .then(res => {\n            const token = res.data.token\n            localStorage.setItem(\"userInfo\", JSON.stringify(res.data))\n            dispatch(authSucess(res.data))\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\n\nexport const UserDetail = (id) =>  async (dispatch, getState) => {\n    \n    try {\n        dispatch({\n            type: actionTypes.USER_PROFILE_START\n        })\n    \n        const userinfo = getState()\n    \n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.userinfo.user.userInfo.token}`\n            },\n        }\n    \n        const {data} = await axios.get(\n            `api/users/${id}`,\n            config\n        )\n    \n        dispatch({\n            type:actionTypes.USER_PROFILE_SUCESS,\n            payload: data\n        })\n    \n    } catch (error) {\n        dispatch({\n            type: actionTypes.USER_PROFILE_FAIL,\n            payload: error\n        })\n\n    }\n    \n\n}\n\n\n\nexport const authSignup = (name, email, password) => {\n    return dispatch => {\n        dispatch(authStart)\n        axios.post(`/api/users`, {\n            name: name,\n            email: email,\n            password: password\n        },{\n            headers:{'Content-Type': 'application/json'}\n        })\n        .then(res => {\n            const token = res.data.token\n            localStorage.setItem(\"userInfo\", JSON.stringify(res.data))\n            dispatch(authSucess(token))\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const  logout = () => (dispatch) => {\n\n    localStorage.removeItem(\"userInfo\")\n\n    dispatch ({\n        type: actionTypes.USER_LOGOUT\n    })\n}"]},"metadata":{},"sourceType":"module"}