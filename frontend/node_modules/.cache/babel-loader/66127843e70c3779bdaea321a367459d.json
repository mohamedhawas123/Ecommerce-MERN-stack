{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utilty';\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconsole.log(userInfoFromStorage);\nconst initalState = {\n  loading: false,\n  userInfo: null,\n  userLogin: {\n    userInfo: userInfoFromStorage\n  },\n  userDetail: {\n    name: '',\n    email: ''\n  },\n  error: null,\n  success: false,\n  users: []\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    loading: true,\n    error: null\n  });\n};\n\nconst authSucess = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    error: null,\n    userInfo: action.token\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    error: action.error\n  });\n};\n\nconst userListStart = (state, action) => {\n  return updateObject(state, {\n    loading: true,\n    error: null\n  });\n};\n\nconst userListSucess = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    users: action.payload\n  });\n};\n\nconst userListFail = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    error: action.error\n  });\n};\n\nconst reducer = (state = initalState, action) => {\n  switch (action.type) {\n    case actionTypes.USER_LOGIN_START:\n      return authStart(state, action);\n\n    case actionTypes.USER_LOGIN_SUCESS:\n      return authSucess(state, action);\n\n    case actionTypes.USER_LOGIN_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.USER_PROFILE_START:\n      return { ...state,\n        loading: true\n      };\n\n    case actionTypes.USER_PROFILE_SUCESS:\n      return { ...state,\n        loading: false,\n        userDetail: action.payload\n      };\n\n    case actionTypes.USER_PROFILE_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actionTypes.USER_PROFILE_UPDATE_START:\n      return {\n        loading: true\n      };\n\n    case actionTypes.USER_PROFILE_UPDATE_SUCESS:\n      return {\n        loading: false,\n        success: true,\n        userInfo: action.payload\n      };\n\n    case actionTypes.USER_PROFILE_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.error\n      };\n\n    case actionTypes.USER_LIST_REQUEST:\n      return userListStart(state, action);\n\n    case actionTypes.USER_SUCESS_REQUEST:\n      return userListSucess(state, action);\n\n    case actionTypes.USER_FAIL_REQUEST:\n      return userListFail(state, action);\n\n    case actionTypes.USER_LIST_REST:\n      return {\n        users: []\n      };\n\n    case actionTypes.USER_DELETE_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case actionTypes.USER_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case actionTypes.USER_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.error\n      };\n\n    case actionTypes.USER_UPDATE_START:\n      return {\n        loading: true\n      };\n\n    case actionTypes.USER_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case actionTypes.USER_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.error\n      };\n\n    case actionTypes.USER_UPDATE_REST:\n      return {\n        userDetail: {}\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/metro/Desktop/projects/ecom-mern/frontend/src/store/reducer/user.js"],"names":["actionTypes","updateObject","userInfoFromStorage","localStorage","getItem","JSON","parse","console","log","initalState","loading","userInfo","userLogin","userDetail","name","email","error","success","users","authStart","state","action","authSucess","token","authFail","userListStart","userListSucess","payload","userListFail","reducer","type","USER_LOGIN_START","USER_LOGIN_SUCESS","USER_LOGIN_FAIL","USER_PROFILE_START","USER_PROFILE_SUCESS","USER_PROFILE_FAIL","USER_PROFILE_UPDATE_START","USER_PROFILE_UPDATE_SUCESS","USER_PROFILE_UPDATE_FAIL","USER_LIST_REQUEST","USER_SUCESS_REQUEST","USER_FAIL_REQUEST","USER_LIST_REST","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_START","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_REST"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\nimport {updateObject} from '../utilty'\n\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") \n? JSON.parse(localStorage.getItem(\"userInfo\")): null\n\nconsole.log(userInfoFromStorage)\n\nconst initalState= {\n    \n    loading: false,\n    userInfo : null,\n    userLogin: {userInfo: userInfoFromStorage},\n    userDetail: {\n        name: '',\n        email: '',\n        \n    },\n    error: null,\n    success: false,\n    users: []\n}\n\n\n\nconst authStart = (state,action) => {\n    return updateObject(state, {\n        loading: true,\n        error: null\n    })\n}\n\nconst authSucess= (state, action) => {\n    return updateObject(state, {\n        loading: false,\n        error: null,\n        userInfo: action.token\n    })\n\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        loading: false,\n        error: action.error\n    })\n}\n\nconst userListStart = (state, action) => {\n    return updateObject(state, {\n        loading: true,\n        error: null\n    })\n}\n\n\nconst userListSucess = (state, action) => {\n    return updateObject(state, {\n        loading: false,\n        users: action.payload\n    })\n}\n\n\nconst userListFail = (state, action) => {\n    return updateObject(state, {\n        loading: false,\n        error: action.error\n    })\n}\n\n\nconst reducer = (state =initalState, action ) => {\n    switch(action.type) {\n        case actionTypes.USER_LOGIN_START: return authStart(state, action)\n        case actionTypes.USER_LOGIN_SUCESS: return authSucess(state, action)\n        case actionTypes.USER_LOGIN_FAIL: return authFail(state, action)\n\n        case actionTypes.USER_PROFILE_START: return {...state, loading: true}\n        case actionTypes.USER_PROFILE_SUCESS: return {...state, loading: false, userDetail:action.payload }\n        case actionTypes.USER_PROFILE_FAIL: return {...state, loading: false, error: action.error}\n\n        case actionTypes.USER_PROFILE_UPDATE_START: return {loading: true}\n        case actionTypes.USER_PROFILE_UPDATE_SUCESS: return {loading: false, success: true ,userInfo:action.payload }\n        case actionTypes.USER_PROFILE_UPDATE_FAIL : return {loading: false, error: action.error}\n        \n        case actionTypes.USER_LIST_REQUEST: return userListStart(state, action)\n        case actionTypes.USER_SUCESS_REQUEST: return userListSucess(state, action)\n        case actionTypes.USER_FAIL_REQUEST : return userListFail(state, action)\n        case actionTypes.USER_LIST_REST : return {users:[]}\n\n        case actionTypes.USER_DELETE_REQUEST: return {...state,  loading: true}\n        case actionTypes.USER_DELETE_SUCCESS: return {loading: false, success: true}\n        case actionTypes.USER_DELETE_FAIL : return {loading: false, error: action.error}\n        \n        case actionTypes.USER_UPDATE_START: return {loading: true}\n        case actionTypes.USER_UPDATE_SUCCESS: return {loading: false, success: true}\n        case actionTypes.USER_UPDATE_FAIL : return {loading: false, error: action.error}\n        case actionTypes.USER_UPDATE_REST: return {userDetail: {}}\n\n        default:\n            return state\n        \n    }\n}\n\nexport default reducer\n\n\n"]},"metadata":{},"sourceType":"module"}