{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utilty';\nconst initalState = {\n  cartItems: []\n};\n\nconst addToCart = (state, action) => {\n  const item = action.item;\n  const existItem = state.cartItems.find(x => x.product === item.product);\n\n  if (existItem) {\n    return { ...state,\n      cartItems: state.cartItems.map(e => e.product === existItem.product ? item : e)\n    };\n  } else {\n    return { ...state,\n      cartItems: [...state.cartItems.item]\n    };\n  }\n};\n\nconst reducer = (state = initalState, action) => {\n  switch (action.type) {\n    case actionTypes.CART_ADD_ITEM:\n      return addToCart(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/metro/Desktop/projects/ecom-mern/frontend/src/store/reducer/cart.js"],"names":["actionTypes","updateObject","initalState","cartItems","addToCart","state","action","item","existItem","find","x","product","map","e","reducer","type","CART_ADD_ITEM"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,YAAR,QAA2B,WAA3B;AAIA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,SAAS,EAAG;AADI,CAApB;;AAKA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,QAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;AACA,QAAMC,SAAS,GAAGH,KAAK,CAACF,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcJ,IAAI,CAACI,OAA7C,CAAlB;;AAEA,MAAGH,SAAH,EAAc;AACV,WAAO,EACH,GAAGH,KADA;AAEHF,MAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACF,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCJ,IAAlC,GAAwCM,CAAjE;AAFR,KAAP;AAKH,GAND,MAMM;AACF,WAAO,EACH,GAAGR,KADA;AAEHF,MAAAA,SAAS,EAAC,CAAC,GAAGE,KAAK,CAACF,SAAN,CAAiBI,IAArB;AAFP,KAAP;AAIH;AACJ,CAhBD;;AAmBA,MAAMO,OAAO,GAAG,CAACT,KAAK,GAACH,WAAP,EAAoBI,MAApB,KAA+B;AAC3C,UAAOA,MAAM,CAACS,IAAd;AACI,SAAKf,WAAW,CAACgB,aAAjB;AAAgC,aAAOZ,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAhB;;AAChC;AACI,aAAOD,KAAP;AAHR;AAKH,CAND;;AAQA,eAAeS,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\nimport {updateObject} from '../utilty'\n\n\n\nconst initalState = {\n    cartItems : []\n}\n\n\nconst addToCart = (state, action) => {\n    const item = action.item\n    const existItem = state.cartItems.find(x => x.product === item.product)\n    \n    if(existItem) {\n        return {\n            ...state,\n            cartItems: state.cartItems.map(e => e.product === existItem.product ? item: e)\n        }\n\n    }else {\n        return {\n            ...state,\n            cartItems:[...state.cartItems. item]\n        }\n    }\n}\n\n\nconst reducer = (state=initalState, action) => {\n    switch(action.type) {\n        case actionTypes.CART_ADD_ITEM: return addToCart(state, action)\n        default:\n            return state\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}