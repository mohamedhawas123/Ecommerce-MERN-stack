{"ast":null,"code":"var _jsxFileName = \"/home/metro/Desktop/projects/ecom-mern/frontend/src/screens/userEditScrean.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { UserDetail } from '../store/actions/user';\nimport FormContainer from '../components/formcontainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserEditScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const userId = match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userDetaill = useSelector(state => state.user);\n  const {\n    loading,\n    userDetail,\n    error\n  } = userDetaill;\n  useEffect(() => {\n    dispatch(UserDetail(userId));\n  }, [userDetail]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 20\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"name\",\n          placeholder: \"Enter name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"isadmin\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          lable: \"Is Admin\",\n          checked: isAdmin,\n          onChange: e => setIsAdmin(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserEditScreen, \"SBqkHm5Nb6VIEKR6WMCGKUFWLzw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["/home/metro/Desktop/projects/ecom-mern/frontend/src/screens/userEditScrean.js"],"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Loader","Message","UserDetail","FormContainer","UserEditScreen","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetaill","state","user","loading","userDetail","error","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Form, Button} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport {UserDetail} from '../store/actions/user'\nimport FormContainer from '../components/formcontainer'\n\n\nconst UserEditScreen = ({match, history}) => {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n\n\n    const dispatch = useDispatch()\n\n    const userDetaill = useSelector(state => state.user)\n    const {loading, userDetail, error} = userDetaill\n\n\n    useEffect(() => {\n       \n            dispatch(UserDetail(userId))\n        \n        \n\n    }, [userDetail])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n\n    }\n\n\n    return (\n\n        <React.Fragment>\n            <Link to='/admin/userlist'  className=\"btn btn-light my-3\">Go Back</Link>\n        \n        \n        <h1>Edit User</h1>\n        {loading ? <Loader />: error ? <Message variant=\"danger\">{error}</Message>:\n        (\n            <Form onSubmit={submitHandler}>\n\n            <Form.Group controlId=\"name\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                     type=\"name\"\n                      placeholder=\"Enter name\"\n                      value={name}\n                    onChange={(e)=> setName(e.target.value) }>\n    \n                    </Form.Control>\n                </Form.Group>\n    \n    \n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                     type=\"email\"\n                      placeholder=\"Enter email\"\n                      value={email}\n                    onChange={(e)=> setEmail(e.target.value) }>\n    \n                    </Form.Control>\n                </Form.Group>\n    \n                <Form.Group controlId=\"isadmin\">\n                \n                    <Form.Check\n                     type=\"checkbox\"\n                      lable=\"Is Admin\"\n                      \n                      checked={isAdmin}\n                    onChange={(e)=> setIsAdmin(e.target.checked) }>\n    \n                    </Form.Check>\n                </Form.Group>\n    \n                <Button type=\"submit\" variant=\"primary\">\n                    Update\n                </Button>\n    \n    \n            </Form>\n    \n        )\n        }\n       \n\n       <FormContainer/>\n        </React.Fragment>\n       \n       \n            \n\n    )\n}\n\nexport default UserEditScreen"]},"metadata":{},"sourceType":"module"}