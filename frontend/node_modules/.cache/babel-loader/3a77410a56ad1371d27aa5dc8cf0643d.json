{"ast":null,"code":"import _regeneratorRuntime from\"/home/metro/Desktop/projects/ecom-mern/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/metro/Desktop/projects/ecom-mern/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/metro/Desktop/projects/ecom-mern/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Form,Button,Col,Row,ListGroup,Image,Card}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/formcontainer';import Message from'../components/Message';import{Link}from'react-router-dom';import{getOrder,payOrder,deliverOrder}from'../store/actions/ordercreate';import Loader from'../components/Loader';import axios from'axios';import{PayPalButton}from'react-paypal-button-v2';import{ORDER_PAY_REST,ORDER_DELIEVER_REST}from'../store/actions/actionTypes';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var OrderScrean=function OrderScrean(_ref){var match=_ref.match,history=_ref.history;var orderId=match.params.id;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),sdkReady=_useState2[0],setSdkReady=_useState2[1];var dispatch=useDispatch();var addDecimals=function addDecimals(num){return(Math.round(num*100)/100).toFixed(2);};var cart=useSelector(function(state){return state.cart;});var getCreate=useSelector(function(state){return state.ordercreate;});var order=getCreate.order,loading=getCreate.loading,error=getCreate.error;var orderPay=useSelector(function(state){return state.ordercreate;});var success=orderPay.success,loadingPay=orderPay.loading;var orderdeliver=useSelector(function(state){return state.ordercreate;});var successDeliever=orderdeliver.success,loadingdeliver=orderdeliver.loading;cart.itemsPrice=cart.cartItems.reduce(function(acc,item){return acc+item.price*item.qty;},0);useEffect(function(){if(!userInfo){history.push('/login');}var addPayPalScript=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$axios$get,clientId,script;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('/api/config/paypal');case 2:_yield$axios$get=_context.sent;clientId=_yield$axios$get.data;script=document.createElement('script');script.type='text/javascript';script.src=\"https://www.paypal.com/sdk/js?client-id=\".concat(clientId);script.async=true;script.onload=function(){setSdkReady(true);};document.body.appendChild(script);case 10:case\"end\":return _context.stop();}}},_callee);}));return function addPayPalScript(){return _ref2.apply(this,arguments);};}();if(!order||success||successDeliever){dispatch({type:ORDER_PAY_REST});dispatch({type:ORDER_DELIEVER_REST});dispatch(getOrder(orderId));}else if(!order.isPaid){if(!window.paypal){addPayPalScript();}else{setSdkReady(true);}}// dispatch(getOrder(orderId))\n},[dispatch,orderId,successDeliever,success,order]);var successPaymentHandler=function successPaymentHandler(paymentResult){dispatch(payOrder(orderId,paymentResult));console.log(paymentResult);};var userLogin=useSelector(function(state){return state.user;});var userInfo=userLogin.userInfo;var deliverHandle=function deliverHandle(){dispatch(deliverOrder(order));};return loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:8,children:/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Shipping\"}),/*#__PURE__*/_jsx(\"strong\",{children:\"Name: \"}),\" \",order.user.name,/*#__PURE__*/_jsx(\"a\",{href:\"mailto:\".concat(order.user.email),children:order.user.email}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Address\"}),' ',\"   \",order.shippingAddress.address,\", \",order.shippingAddress.city,\", \",' ',order.shippingAddress.postelCode,\", \",' ',order.shippingAddress.country]}),order.isDelivered?/*#__PURE__*/_jsx(Message,{variant:\"success\",children:\"Delivered \"}):/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:\" Not Delivered  \"})]}),/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Payment\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Method: \"}),order.paymentMethod]}),order.isPaid?/*#__PURE__*/_jsx(Message,{variant:\"success\",children:\"Paid \"}):/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:\" Not Paid \"})]}),/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Order Items\"}),order.orderItems.length===0?/*#__PURE__*/_jsx(Message,{children:\"Your order is Empty\"}):/*#__PURE__*/_jsx(ListGroup.Item,{children:order.orderItems.map(function(item,index){return/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:1,children:/*#__PURE__*/_jsx(Image,{src:item.image,alt:item.name,fluid:true,rounded:true})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Link,{to:\"/product/\".concat(item.product),children:item.name})}),/*#__PURE__*/_jsxs(Col,{md:4,children:[item.qty,\" X $\",item.price,\" = $\",item.qty*item.price]})]})},index);})})]})]})}),/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Order Summary\"})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Items\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",cart.itemsPrice]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"shipping\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",order.shippingPrice]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Tax\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",order.taxPrice]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Total\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",order.totalPrice]})]})}),!order.isPaid&&/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(PayPalButton,{amount:order.totalPrice,onSuccess:successPaymentHandler})}),loadingdeliver&&/*#__PURE__*/_jsx(Loader,{}),userInfo.isAdmin&&order.isPaid&&!order.isDelivered&&/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"button\",className:\"btn btn-block\",onClick:deliverHandle,children:\"Mark as Delivred\"})}),/*#__PURE__*/_jsx(ListGroup.Item,{})]})})})]})})});};export default OrderScrean;","map":{"version":3,"sources":["/home/metro/Desktop/projects/ecom-mern/frontend/src/screens/orderScrean.js"],"names":["React","useEffect","useState","Form","Button","Col","Row","ListGroup","Image","Card","useDispatch","useSelector","FormContainer","Message","Link","getOrder","payOrder","deliverOrder","Loader","axios","PayPalButton","ORDER_PAY_REST","ORDER_DELIEVER_REST","OrderScrean","match","history","orderId","params","id","sdkReady","setSdkReady","dispatch","addDecimals","num","Math","round","toFixed","cart","state","getCreate","ordercreate","order","loading","error","orderPay","success","loadingPay","orderdeliver","successDeliever","loadingdeliver","itemsPrice","cartItems","reduce","acc","item","price","qty","userInfo","push","addPayPalScript","get","clientId","data","script","document","createElement","type","src","async","onload","body","appendChild","isPaid","window","paypal","successPaymentHandler","paymentResult","console","log","userLogin","user","deliverHandle","name","email","shippingAddress","address","city","postelCode","country","isDelivered","paymentMethod","orderItems","length","map","index","image","product","shippingPrice","taxPrice","totalPrice","isAdmin"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Form, Button, Col, Row ,ListGroup, Image, Card} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport FormContainer from '../components/formcontainer'\nimport Message from '../components/Message'\nimport {Link} from 'react-router-dom'\nimport {getOrder, payOrder, deliverOrder} from '../store/actions/ordercreate'\nimport Loader  from '../components/Loader'\nimport axios from 'axios'\nimport {PayPalButton} from 'react-paypal-button-v2'\nimport {ORDER_PAY_REST, ORDER_DELIEVER_REST} from '../store/actions/actionTypes'\n\n\nconst OrderScrean = ({match, history}) => {\n\n    const orderId = match.params.id\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const addDecimals = (num) => {\n        return (Math.round(num *100) / 100).toFixed(2)\n    }\n\n\n\n    const cart = useSelector(state => state.cart)\n\n   \n\n    const getCreate = useSelector(state => state.ordercreate)\n\n    const {order, loading, error} = getCreate\n\n    const orderPay = useSelector(state => state.ordercreate)\n    const {success, loading: loadingPay} = orderPay\n\n    const orderdeliver = useSelector(state => state.ordercreate)\n    const {success:successDeliever, loading: loadingdeliver} = orderdeliver\n\n    cart.itemsPrice = cart.cartItems.reduce( (acc, item) => acc + item.price * item.qty, 0 )\n\n\n    useEffect( () => {\n        if(!userInfo) {\n            history.push('/login')\n        }\n        const addPayPalScript = async () => {\n            const {data: clientId} = await axios.get('/api/config/paypal')\n            const script = document.createElement('script')\n            script.type = 'text/javascript'\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n            script.async = true\n            script.onload = () => {\n                setSdkReady(true)\n            }\n\n            document.body.appendChild(script)\n\n        }\n\n       \n        if(!order || success || successDeliever ) {\n            dispatch({type: ORDER_PAY_REST })\n            dispatch({type: ORDER_DELIEVER_REST })\n\n            dispatch(getOrder(orderId))\n        } else if(!order.isPaid) {\n            if(!window.paypal) {\n                addPayPalScript()\n            }else {\n                setSdkReady(true) \n            }\n        }\n\n       // dispatch(getOrder(orderId))\n    }, [dispatch, orderId, successDeliever ,success, order])\n\n     \n    const successPaymentHandler = (paymentResult) => {\n\n        \n        dispatch(payOrder(orderId, paymentResult))\n        console.log(paymentResult)\n    }\n\n    const userLogin = useSelector( (state) => state.user )\n    const {userInfo} = userLogin\n    \n    const deliverHandle = () => {\n        dispatch(deliverOrder(order))\n    }\n\n\n    return loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message>\n    : <React.Fragment>\n        \n        <div>\n           \n            <Row>\n                <Col md={8}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <strong>Name: </strong> {order.user.name}\n                            <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n                            <p>\n                                <strong>Address</strong>\n                             {' '}   {order.shippingAddress.address}, {order.shippingAddress.city}, {' '}\n                                {order.shippingAddress.postelCode}, {' '}\n                                {order.shippingAddress.country}\n                            </p>\n                            {order.isDelivered ? <Message variant='success'>Delivered </Message>\n                            : <Message variant='danger'> Not Delivered  </Message>\n\n                             }\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment</h2>\n                            \n                            <p>\n                                <strong>Method: </strong>\n                             {order.paymentMethod}\n                            </p>\n                            {order.isPaid ? <Message variant='success'>Paid </Message>\n                            : <Message variant='danger'> Not Paid </Message>\n\n                             }\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n\n                        <h2>Order Items</h2>\n                        {order.orderItems.length === 0 ? <Message>Your order is Empty</Message>\n                         : (\n                             <ListGroup.Item>\n\n                                 {order.orderItems.map((item, index) => {\n                                     return (\n                                        <ListGroup.Item key={index} >\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name}\n                                                    fluid rounded  />\n\n                                                </Col>\n                                                <Col>\n                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n            \n                                                </Col>\n\n\n                                                <Col md={4}>\n                                                    {item.qty} X ${item.price} = ${item.qty * item.price}\n                                                </Col>\n\n                                            </Row>\n                                         </ListGroup.Item>\n                                     )\n                                 })}\n\n                            </ListGroup.Item>\n                         )\n                          }\n\n                        </ListGroup.Item>\n\n\n                    </ListGroup>\n                </Col>\n                \n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant=\"flush\">\n                            <ListGroup.Item>\n                                    <h2>Order Summary</h2>\n                                </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>shipping</Col>\n                                    <Col>${order.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>${order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            {!order.isPaid && (\n                                <ListGroup.Item>\n                                    {/* {loadingPay && <Loader />}\n                                    {!sdkReady ?  <Loader />: ( */}\n                                        <PayPalButton\n                                         amount={order.totalPrice}\n                                         onSuccess={successPaymentHandler}\n                                         />\n                                    {/* )} */}\n                                </ListGroup.Item>\n                            )}\n                                {loadingdeliver && <Loader />}\n                            {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                <ListGroup.Item>\n                                    <Button \n                                    type=\"button\"\n                                    className=\"btn btn-block\"\n                                    onClick={deliverHandle}>Mark as Delivred</Button>\n                                </ListGroup.Item>\n                            )\n\n                            }\n\n                            <ListGroup.Item>\n                                {/* {error && <Message variant=\"danger\">{order}</Message>} */}\n                            </ListGroup.Item>\n\n                          \n\n                        </ListGroup>\n                    </Card>\n                </Col>\n\n            </Row>\n\n        </div>\n    </React.Fragment>\n}\n\nexport default OrderScrean"]},"metadata":{},"sourceType":"module"}